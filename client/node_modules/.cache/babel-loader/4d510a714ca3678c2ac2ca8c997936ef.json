{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pechenka\\\\pixel-app-ts\\\\client\\\\src\\\\components\\\\UploadImage\\\\UploadImage.tsx\",\n    _s = $RefreshSig$();\n\nimport { useContext, useRef, useState } from \"react\";\nimport axios from \"axios\";\nimport { ArtsContext } from \"../../context/arts-context\";\nimport Button from \"../UI/Button/Button\";\nimport Modal from \"../UI/Modal/Modal\";\nimport classes from \"./UploadImage.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst UploadImage = () => {\n  _s();\n\n  const {\n    artsState,\n    artsDispatch\n  } = useContext(ArtsContext);\n  const [showModal, setShowModal] = useState(false);\n  const fileInpRef = useRef(null);\n\n  const onSubmitHandler = e => {\n    e.preventDefault();\n    const formData = new FormData(e.target);\n    axios({\n      method: \"post\",\n      url: \"/upl-img\",\n      data: formData,\n      headers: {\n        \"Content-Type\": \"multipart/form-data\"\n      }\n    }).then(data => {\n      artsDispatch({\n        type: \"ADD_ART\",\n        data: {\n          id: artsState.arts.length,\n          rows: data.data\n        }\n      });\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const onShowModal = () => {\n    setShowModal(true);\n  };\n\n  const onCloseModal = () => {\n    setShowModal(false);\n  };\n\n  const onBrowseImg = () => {\n    fileInpRef.current.click();\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      action: \"/upl-img\",\n      method: \"post\",\n      encType: \"multipart/form-data\",\n      onSubmit: onSubmitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        name: \"img\",\n        style: {\n          display: \"none\"\n        },\n        ref: fileInpRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"hidden\",\n        value: artsState.settings.pixelSize,\n        name: \"ps\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"hidden\",\n        value: artsState.settings.defColor,\n        name: \"dc\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"button\",\n      clicked: onShowModal,\n      children: \"LOAD\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), showModal && /*#__PURE__*/_jsxDEV(Modal, {\n      closed: onCloseModal,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onBrowseImg,\n        children: \"BROWSE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.ImgContainer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 12\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(UploadImage, \"Scmuxi+s2B1Ul8EhxTybwoZPiqA=\");\n\n_c = UploadImage;\nexport default UploadImage;\n\nvar _c;\n\n$RefreshReg$(_c, \"UploadImage\");","map":{"version":3,"sources":["C:/Users/Pechenka/pixel-app-ts/client/src/components/UploadImage/UploadImage.tsx"],"names":["useContext","useRef","useState","axios","ArtsContext","Button","Modal","classes","UploadImage","artsState","artsDispatch","showModal","setShowModal","fileInpRef","onSubmitHandler","e","preventDefault","formData","FormData","target","method","url","data","headers","then","type","id","arts","length","rows","catch","err","console","log","onShowModal","onCloseModal","onBrowseImg","current","click","display","settings","pixelSize","defColor","ImgContainer"],"mappings":"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","sourcesContent":["import { FormEventHandler, useContext, useRef, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nimport { ArtsContext } from \"../../context/arts-context\";\r\nimport Button from \"../UI/Button/Button\";\r\nimport Modal from \"../UI/Modal/Modal\";\r\nimport classes from \"./UploadImage.module.css\";\r\n\r\nconst UploadImage = () => {\r\n  const { artsState, artsDispatch } = useContext(ArtsContext)!;\r\n  const [showModal, setShowModal] = useState(false);\r\n  const fileInpRef = useRef<null | HTMLInputElement>(null);\r\n\r\n  const onSubmitHandler: FormEventHandler = (e) => {\r\n    e.preventDefault();\r\n    const formData = new FormData(e.target as HTMLFormElement);\r\n    axios({\r\n      method: \"post\",\r\n      url: \"/upl-img\",\r\n      data: formData,\r\n      headers: { \"Content-Type\": \"multipart/form-data\" },\r\n    })\r\n      .then((data) => {\r\n        artsDispatch({\r\n          type: \"ADD_ART\",\r\n          data: { id: artsState.arts.length, rows: data.data },\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const onShowModal = () => {\r\n    setShowModal(true);\r\n  };\r\n\r\n  const onCloseModal = () => {\r\n    setShowModal(false);\r\n  };\r\n\r\n  const onBrowseImg = () => {\r\n    fileInpRef.current!.click();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form\r\n        action=\"/upl-img\"\r\n        method=\"post\"\r\n        encType=\"multipart/form-data\"\r\n        onSubmit={onSubmitHandler}\r\n      >\r\n        <input\r\n          type=\"file\"\r\n          name=\"img\"\r\n          style={{ display: \"none\" }}\r\n          ref={fileInpRef}\r\n        />\r\n        <input type=\"hidden\" value={artsState.settings.pixelSize} name=\"ps\" />\r\n        <input type=\"hidden\" value={artsState.settings.defColor} name=\"dc\" />\r\n        <input type=\"submit\" value=\"upload\" />\r\n      </form>\r\n      <Button type=\"button\" clicked={onShowModal}>\r\n        LOAD\r\n      </Button>\r\n      {showModal && (\r\n        <Modal closed={onCloseModal}>\r\n          <button onClick={onBrowseImg}>BROWSE</button>\r\n          {<div className={classes.ImgContainer}></div>}\r\n        </Modal>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UploadImage;\r\n"]},"metadata":{},"sourceType":"module"}