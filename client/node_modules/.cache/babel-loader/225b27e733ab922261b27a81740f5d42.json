{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pechenka\\\\pixel-app-ts\\\\src\\\\components\\\\ToolsBar\\\\SaveImage\\\\SaveImage.tsx\",\n    _s = $RefreshSig$();\n\nimport { useContext, useEffect, useRef, useState } from \"react\";\nimport classes from \"./SaveImage.module.css\";\nimport { ArtsContext } from \"../../../context/arts-context\";\nimport { SettingsContext } from \"../../../context/settings-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SaveImage = () => {\n  _s();\n\n  const {\n    settings\n  } = useContext(SettingsContext);\n  const {\n    arts\n  } = useContext(ArtsContext);\n  const [imgUrl, setImgUrl] = useState(null);\n  const socket = useRef(null);\n  useEffect(() => {\n    const s = new WebSocket(\"ws://localhost:3001\");\n\n    s.onopen = e => {\n      console.log(\"connection\");\n    };\n\n    s.onmessage = function (e) {\n      console.log(e);\n\n      if (e.data.data) {\n        setImgUrl(\"http:localhost:3001/get-img\");\n      }\n\n      alert(\"Img is ready\");\n    };\n\n    socket.current = s;\n  }, []);\n\n  const onSaveImage = e => {\n    e.preventDefault();\n    const art = arts.arts.find(art => art.id === arts.chosen);\n    socket.current.send(JSON.stringify({\n      img: art,\n      cs: settings.columnSize,\n      rs: settings.rowSize,\n      dc: settings.defColor\n    })); // setImg(art);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: onSaveImage,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: classes.SaveImage,\n      children: \"SAVE\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), imgUrl && /*#__PURE__*/_jsxDEV(\"a\", {\n      href: imgUrl\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 18\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SaveImage, \"t6qz455WFUnl4y2kzMtkXg1yKu8=\");\n\n_c = SaveImage;\nexport default SaveImage;\n\nvar _c;\n\n$RefreshReg$(_c, \"SaveImage\");","map":{"version":3,"sources":["C:/Users/Pechenka/pixel-app-ts/src/components/ToolsBar/SaveImage/SaveImage.tsx"],"names":["useContext","useEffect","useRef","useState","classes","ArtsContext","SettingsContext","SaveImage","settings","arts","imgUrl","setImgUrl","socket","s","WebSocket","onopen","e","console","log","onmessage","data","alert","current","onSaveImage","preventDefault","art","find","id","chosen","send","JSON","stringify","img","cs","columnSize","rs","rowSize","dc","defColor"],"mappings":";;;AAAA,SAGEA,UAHF,EAIEC,SAJF,EAKEC,MALF,EAMEC,QANF,QAOO,OAPP;AASA,OAAOC,OAAP,MAAoB,wBAApB;AACA,SAAcC,WAAd,QAAiC,+BAAjC;AACA,SAASC,eAAT,QAAgC,mCAAhC;;;AAGA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACtB,QAAM;AAAEC,IAAAA;AAAF,MAAeR,UAAU,CAACM,eAAD,CAA/B;AACA,QAAM;AAAEG,IAAAA;AAAF,MAAWT,UAAU,CAACK,WAAD,CAA3B;AACA,QAAM,CAACK,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAgB,IAAhB,CAApC;AACA,QAAMS,MAAM,GAAGV,MAAM,CAAmB,IAAnB,CAArB;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMY,CAAC,GAAG,IAAIC,SAAJ,CAAc,qBAAd,CAAV;;AACAD,IAAAA,CAAC,CAACE,MAAF,GAAYC,CAAD,IAAO;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACD,KAFD;;AAGAL,IAAAA,CAAC,CAACM,SAAF,GAAc,UAAUH,CAAV,EAAa;AACzBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;;AACA,UAAIA,CAAC,CAACI,IAAF,CAAOA,IAAX,EAAiB;AACfT,QAAAA,SAAS,CAAC,6BAAD,CAAT;AACD;;AACDU,MAAAA,KAAK,CAAC,cAAD,CAAL;AACD,KAND;;AAOAT,IAAAA,MAAM,CAACU,OAAP,GAAiBT,CAAjB;AACD,GAbQ,EAaN,EAbM,CAAT;;AAeA,QAAMU,WAA6B,GAAIP,CAAD,IAAO;AAC3CA,IAAAA,CAAC,CAACQ,cAAF;AACA,UAAMC,GAAG,GAAGhB,IAAI,CAACA,IAAL,CAAUiB,IAAV,CAAgBD,GAAD,IAASA,GAAG,CAACE,EAAJ,KAAWlB,IAAI,CAACmB,MAAxC,CAAZ;AACAhB,IAAAA,MAAM,CAACU,OAAP,CAAgBO,IAAhB,CACEC,IAAI,CAACC,SAAL,CAAe;AACbC,MAAAA,GAAG,EAAEP,GADQ;AAEbQ,MAAAA,EAAE,EAAEzB,QAAQ,CAAE0B,UAFD;AAGbC,MAAAA,EAAE,EAAE3B,QAAQ,CAAE4B,OAHD;AAIbC,MAAAA,EAAE,EAAE7B,QAAQ,CAAE8B;AAJD,KAAf,CADF,EAH2C,CAW3C;AACD,GAZD;;AAcA,sBACE;AAAM,IAAA,QAAQ,EAAEf,WAAhB;AAAA,4BACE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,SAAS,EAAEnB,OAAO,CAACG,SAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAIGG,MAAM,iBAAI;AAAG,MAAA,IAAI,EAAEA;AAAT;AAAA;AAAA;AAAA;AAAA,YAJb;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CAhDD;;GAAMH,S;;KAAAA,S;AAkDN,eAAeA,SAAf","sourcesContent":["import {\r\n  FormEventHandler,\r\n  MutableRefObject,\r\n  useContext,\r\n  useEffect,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\n\r\nimport classes from \"./SaveImage.module.css\";\r\nimport { Art, ArtsContext } from \"../../../context/arts-context\";\r\nimport { SettingsContext } from \"../../../context/settings-context\";\r\nimport { createCanvas } from \"canvas\";\r\n\r\nconst SaveImage = () => {\r\n  const { settings } = useContext(SettingsContext);\r\n  const { arts } = useContext(ArtsContext)!;\r\n  const [imgUrl, setImgUrl] = useState<null | string>(null);\r\n  const socket = useRef<null | WebSocket>(null);\r\n\r\n  useEffect(() => {\r\n    const s = new WebSocket(\"ws://localhost:3001\");\r\n    s.onopen = (e) => {\r\n      console.log(\"connection\");\r\n    };\r\n    s.onmessage = function (e) {\r\n      console.log(e);\r\n      if (e.data.data) {\r\n        setImgUrl(\"http:localhost:3001/get-img\");\r\n      }\r\n      alert(\"Img is ready\");\r\n    };\r\n    socket.current = s;\r\n  }, []);\r\n\r\n  const onSaveImage: FormEventHandler = (e) => {\r\n    e.preventDefault();\r\n    const art = arts.arts.find((art) => art.id === arts.chosen)!;\r\n    socket.current!.send(\r\n      JSON.stringify({\r\n        img: art,\r\n        cs: settings!.columnSize,\r\n        rs: settings!.rowSize,\r\n        dc: settings!.defColor,\r\n      })\r\n    );\r\n    // setImg(art);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={onSaveImage}>\r\n      <button type=\"submit\" className={classes.SaveImage}>\r\n        SAVE\r\n      </button>\r\n      {imgUrl && <a href={imgUrl}></a>}\r\n\r\n      {/* <input type=\"hidden\" name=\"img\" value={JSON.stringify(img)} />\r\n      <input type=\"hidden\" name=\"cs\" value={settings!.columnSize} />\r\n      <input type=\"hidden\" name=\"rs\" value={settings!.rowSize} />\r\n      <input type=\"hidden\" name=\"dc\" value={settings!.defColor} /> */}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default SaveImage;\r\n"]},"metadata":{},"sourceType":"module"}