{"ast":null,"code":"import _slicedToArray from\"C:/Users/Pechenka/pixel-app-ts/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useContext,useState}from\"react\";import{ArtsContext}from\"../../context/arts-context\";import SizeToggle from\"./SizeToggle/SizeToggle\";import Reset from\"./Reset/Reset\";import PreviewAnimation from\"./PreviewAnimation/PreviewAnimation\";import createArt from\"../../hoc/createArt\";import Duration from\"./Duration/Duration\";import PixelSize from\"./PixelSize/PixelSize\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var SettingsBar=function SettingsBar(){var _useState=useState(1),_useState2=_slicedToArray(_useState,2),duration=_useState2[0],setDuration=_useState2[1];var _ref=useContext(ArtsContext),artsState=_ref.artsState,artsDispatch=_ref.artsDispatch;var onAddRow=function onAddRow(e){var row=[];for(var i=0;i<artsState.settings.columnSize;i++){row.push({xpos:i,ypos:artsState.settings.rowSize,color:artsState.settings.defColor});}artsDispatch({type:\"ADD_ROW\",data:row});};var onDelRow=function onDelRow(e){artsDispatch({type:\"DEL_ROW\"});};var onAddCol=function onAddCol(e){artsDispatch({type:\"ADD_COL\",data:{x:artsState.settings.columnSize,color:artsState.settings.defColor}});};var onDelCol=function onDelCol(e){artsDispatch({type:\"DEL_COL\"});};var resetHandler=function resetHandler(){var artRows=createArt(artsState.settings);artsDispatch({type:\"UPD_ART\",artId:artsState.chosen,data:{rows:artRows,id:artsState.chosen}});};var durationChangedHandler=function durationChangedHandler(e){setDuration(+e.target.value);};var pixelSizeChangedHandler=function pixelSizeChangedHandler(e){artsDispatch({type:\"SET_PS\",data:+e.target.value});};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(PreviewAnimation,{duration:duration}),/*#__PURE__*/_jsxs(\"div\",{style:{display:\"flex\",flexDirection:\"column\",alignItems:\"flex-end\",gap:\"10px\",margin:\"10px 0\"},children:[/*#__PURE__*/_jsx(SizeToggle,{cur:artsState.settings.rowSize,img:\"\\u2195\",add:onAddRow,del:onDelRow}),/*#__PURE__*/_jsx(SizeToggle,{cur:artsState.settings.columnSize,img:\"\\u2194\",add:onAddCol,del:onDelCol})]}),/*#__PURE__*/_jsx(\"div\",{style:{display:\"flex\",justifyContent:\"center\"},children:/*#__PURE__*/_jsx(Reset,{clicked:resetHandler})}),/*#__PURE__*/_jsx(Duration,{curDur:duration,changed:durationChangedHandler}),/*#__PURE__*/_jsx(PixelSize,{curPS:artsState.settings.pixelSize,changed:pixelSizeChangedHandler})]});};export default SettingsBar;","map":{"version":3,"sources":["C:/Users/Pechenka/pixel-app-ts/client/src/components/SettingsBar/SettingsBar.tsx"],"names":["useContext","useState","ArtsContext","SizeToggle","Reset","PreviewAnimation","createArt","Duration","PixelSize","SettingsBar","duration","setDuration","artsState","artsDispatch","onAddRow","e","row","i","settings","columnSize","push","xpos","ypos","rowSize","color","defColor","type","data","onDelRow","onAddCol","x","onDelCol","resetHandler","artRows","artId","chosen","rows","id","durationChangedHandler","target","value","pixelSizeChangedHandler","display","flexDirection","alignItems","gap","margin","justifyContent","pixelSize"],"mappings":"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","sourcesContent":["import {\r\n  ChangeEventHandler,\r\n  MouseEventHandler,\r\n  useContext,\r\n  useState,\r\n} from \"react\";\r\nimport { ArtsContext } from \"../../context/arts-context\";\r\n\r\nimport SizeToggle from \"./SizeToggle/SizeToggle\";\r\nimport Reset from \"./Reset/Reset\";\r\nimport PreviewAnimation from \"./PreviewAnimation/PreviewAnimation\";\r\nimport createArt from \"../../hoc/createArt\";\r\nimport Duration from \"./Duration/Duration\";\r\nimport PixelSize from \"./PixelSize/PixelSize\";\r\n\r\nconst SettingsBar = () => {\r\n  const [duration, setDuration] = useState(1);\r\n  const { artsState, artsDispatch } = useContext(ArtsContext)!;\r\n\r\n  const onAddRow: MouseEventHandler = (e) => {\r\n    const row = [];\r\n    for (let i = 0; i < artsState.settings!.columnSize; i++) {\r\n      row.push({\r\n        xpos: i,\r\n        ypos: artsState.settings!.rowSize,\r\n        color: artsState.settings!.defColor,\r\n      });\r\n    }\r\n    artsDispatch({ type: \"ADD_ROW\", data: row });\r\n  };\r\n\r\n  const onDelRow: MouseEventHandler = (e) => {\r\n    artsDispatch({ type: \"DEL_ROW\" });\r\n  };\r\n\r\n  const onAddCol: MouseEventHandler = (e) => {\r\n    artsDispatch({\r\n      type: \"ADD_COL\",\r\n      data: {\r\n        x: artsState.settings!.columnSize,\r\n        color: artsState.settings!.defColor,\r\n      },\r\n    });\r\n  };\r\n\r\n  const onDelCol: MouseEventHandler = (e) => {\r\n    artsDispatch({ type: \"DEL_COL\" });\r\n  };\r\n\r\n  const resetHandler = () => {\r\n    const artRows = createArt(artsState.settings!);\r\n    artsDispatch({\r\n      type: \"UPD_ART\",\r\n      artId: artsState.chosen!,\r\n      data: { rows: artRows, id: artsState!.chosen },\r\n    });\r\n  };\r\n\r\n  const durationChangedHandler: ChangeEventHandler = (e) => {\r\n    setDuration(+(e.target as HTMLInputElement).value);\r\n  };\r\n\r\n  const pixelSizeChangedHandler: ChangeEventHandler = (e) => {\r\n    artsDispatch({\r\n      type: \"SET_PS\",\r\n      data: +(e.target as HTMLInputElement).value,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <PreviewAnimation duration={duration} />\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          alignItems: \"flex-end\",\r\n          gap: \"10px\",\r\n          margin: \"10px 0\",\r\n        }}\r\n      >\r\n        <SizeToggle\r\n          cur={artsState.settings!.rowSize}\r\n          img=\"&#8597;\"\r\n          add={onAddRow}\r\n          del={onDelRow}\r\n        />\r\n        <SizeToggle\r\n          cur={artsState.settings!.columnSize}\r\n          img=\"&#8596;\"\r\n          add={onAddCol}\r\n          del={onDelCol}\r\n        />\r\n      </div>\r\n      <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n        <Reset clicked={resetHandler} />\r\n      </div>\r\n      <Duration curDur={duration} changed={durationChangedHandler} />\r\n      <PixelSize\r\n        curPS={artsState.settings.pixelSize}\r\n        changed={pixelSizeChangedHandler}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SettingsBar;\r\n"]},"metadata":{},"sourceType":"module"}