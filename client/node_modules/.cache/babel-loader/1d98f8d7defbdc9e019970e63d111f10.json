{"ast":null,"code":"import _slicedToArray from\"C:/Users/Pechenka/pixel-app-ts/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _objectSpread from\"C:/Users/Pechenka/pixel-app-ts/client/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useReducer}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";var initialState={defColor:\"#000\",rowSize:16,columnSize:16,color:\"#000\",tool:null};export var SettingsContext=/*#__PURE__*/React.createContext({settings:null,settingsDispatch:null});var reducer=function reducer(state,action){switch(action.type){case\"ADD_ROW\":return _objectSpread(_objectSpread({},state),{},{rowSize:state.rowSize+1});case\"DEL_ROW\":return _objectSpread(_objectSpread({},state),{},{rowSize:state.rowSize-1||1});case\"ADD_COL\":return _objectSpread(_objectSpread({},state),{},{columnSize:state.columnSize+1});case\"DEL_COL\":return _objectSpread(_objectSpread({},state),{},{columnSize:state.columnSize-1||1});case\"SET_TOOL\":return _objectSpread(_objectSpread({},state),{},{tool:action.data});case\"SET_COLOR\":return _objectSpread(_objectSpread({},state),{},{color:action.data});default:throw new Error(\"Uncaught type: \".concat(action.type));}};var SettingsContextProvider=function SettingsContextProvider(props){var _useReducer=useReducer(reducer,initialState),_useReducer2=_slicedToArray(_useReducer,2),state=_useReducer2[0],dispatch=_useReducer2[1];return/*#__PURE__*/_jsx(SettingsContext.Provider,{value:{settings:state,settingsDispatch:dispatch},children:props.children});};export default SettingsContextProvider;","map":{"version":3,"sources":["C:/Users/Pechenka/pixel-app-ts/client/src/context/settings-context.tsx"],"names":["React","useReducer","initialState","defColor","rowSize","columnSize","color","tool","SettingsContext","createContext","settings","settingsDispatch","reducer","state","action","type","data","Error","SettingsContextProvider","props","dispatch","children"],"mappings":"qPAAA,MAAOA,CAAAA,KAAP,EAAgBC,UAAhB,KAAkC,OAAlC,C,2CAgBA,GAAMC,CAAAA,YAAY,CAAG,CACnBC,QAAQ,CAAE,MADS,CAEnBC,OAAO,CAAE,EAFU,CAGnBC,UAAU,CAAE,EAHO,CAInBC,KAAK,CAAE,MAJY,CAKnBC,IAAI,CAAE,IALa,CAArB,CAQA,MAAO,IAAMC,CAAAA,eAAe,cAAGR,KAAK,CAACS,aAAN,CAAmC,CAChEC,QAAQ,CAAE,IADsD,CAEhEC,gBAAgB,CAAE,IAF8C,CAAnC,CAAxB,CASP,GAAMC,CAAAA,OAAwB,CAAG,QAA3BA,CAAAA,OAA2B,CAACC,KAAD,CAAQC,MAAR,CAAmB,CAClD,OAAQA,MAAM,CAACC,IAAf,EACE,IAAK,SAAL,CACE,sCACKF,KADL,MAEET,OAAO,CAAES,KAAK,CAACT,OAAN,CAAgB,CAF3B,GAIF,IAAK,SAAL,CACE,sCACKS,KADL,MAEET,OAAO,CAAES,KAAK,CAACT,OAAN,CAAgB,CAAhB,EAAqB,CAFhC,GAIF,IAAK,SAAL,CACE,sCACKS,KADL,MAEER,UAAU,CAAEQ,KAAK,CAACR,UAAN,CAAmB,CAFjC,GAIF,IAAK,SAAL,CACE,sCACKQ,KADL,MAEER,UAAU,CAAEQ,KAAK,CAACR,UAAN,CAAmB,CAAnB,EAAwB,CAFtC,GAIF,IAAK,UAAL,CACE,sCACKQ,KADL,MAEEN,IAAI,CAAEO,MAAM,CAACE,IAFf,GAIF,IAAK,WAAL,CACE,sCACKH,KADL,MAEEP,KAAK,CAAEQ,MAAM,CAACE,IAFhB,GAIF,QACE,KAAM,IAAIC,CAAAA,KAAJ,0BAA4BH,MAAM,CAACC,IAAnC,EAAN,CAhCJ,CAkCD,CAnCD,CA0CA,GAAMG,CAAAA,uBAAuB,CAAG,QAA1BA,CAAAA,uBAA0B,CAACC,KAAD,CAAgB,CAC9C,gBAA0BlB,UAAU,CAACW,OAAD,CAAUV,YAAV,CAApC,4CAAOW,KAAP,iBAAcO,QAAd,iBAEA,mBACE,KAAC,eAAD,CAAiB,QAAjB,EACE,KAAK,CAAE,CAAEV,QAAQ,CAAEG,KAAZ,CAAmBF,gBAAgB,CAAES,QAArC,CADT,UAGGD,KAAK,CAACE,QAHT,EADF,CAOD,CAVD,CAYA,cAAeH,CAAAA,uBAAf","sourcesContent":["import React, { useReducer } from \"react\";\r\n\r\ninterface SettingsReducerState {\r\n  defColor: string;\r\n  rowSize: number;\r\n  columnSize: number;\r\n  color: string;\r\n  tool: \"BRUSH\" | \"FILL\" | \"ERASER\" | \"PIPETTE\" | \"MOVE\" | null;\r\n}\r\n\r\ninterface SettingsReducerAction {\r\n  type: string;\r\n  data?: any;\r\n  rId?: string;\r\n}\r\n\r\nconst initialState = {\r\n  defColor: \"#000\",\r\n  rowSize: 16,\r\n  columnSize: 16,\r\n  color: \"#000\",\r\n  tool: null,\r\n};\r\n\r\nexport const SettingsContext = React.createContext<ProviderValue>({\r\n  settings: null,\r\n  settingsDispatch: null,\r\n});\r\n\r\ninterface SettingsReducer {\r\n  (a: SettingsReducerState, b: SettingsReducerAction): SettingsReducerState;\r\n}\r\n\r\nconst reducer: SettingsReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"ADD_ROW\":\r\n      return {\r\n        ...state,\r\n        rowSize: state.rowSize + 1,\r\n      };\r\n    case \"DEL_ROW\":\r\n      return {\r\n        ...state,\r\n        rowSize: state.rowSize - 1 || 1,\r\n      };\r\n    case \"ADD_COL\":\r\n      return {\r\n        ...state,\r\n        columnSize: state.columnSize + 1,\r\n      };\r\n    case \"DEL_COL\":\r\n      return {\r\n        ...state,\r\n        columnSize: state.columnSize - 1 || 1,\r\n      };\r\n    case \"SET_TOOL\":\r\n      return {\r\n        ...state,\r\n        tool: action.data,\r\n      };\r\n    case \"SET_COLOR\":\r\n      return {\r\n        ...state,\r\n        color: action.data,\r\n      };\r\n    default:\r\n      throw new Error(`Uncaught type: ${action.type}`);\r\n  }\r\n};\r\n\r\ninterface ProviderValue {\r\n  settings: SettingsReducerState | null;\r\n  settingsDispatch: React.Dispatch<SettingsReducerAction> | null;\r\n}\r\n\r\nconst SettingsContextProvider = (props: any) => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n  return (\r\n    <SettingsContext.Provider\r\n      value={{ settings: state, settingsDispatch: dispatch }}\r\n    >\r\n      {props.children}\r\n    </SettingsContext.Provider>\r\n  );\r\n};\r\n\r\nexport default SettingsContextProvider;\r\n"]},"metadata":{},"sourceType":"module"}