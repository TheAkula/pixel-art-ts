{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pechenka\\\\pixel-app-ts\\\\src\\\\components\\\\Arts\\\\Arts.tsx\",\n    _s = $RefreshSig$();\n\nimport { useContext } from \"react\";\nimport classes from \"./Arts.module.css\";\nimport Art from \"./Art/Art\";\nimport { ArtsContext } from \"../../context/arts-context\";\nimport { SettingsContext } from \"../../context/settings-context\";\nimport createArt from \"../../hoc/createArt\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Arts = props => {\n  _s();\n\n  const {\n    arts,\n    artsDispatch\n  } = useContext(ArtsContext);\n  const {\n    settings\n  } = useContext(SettingsContext);\n\n  const artClickedHandler = id => {\n    return e => {\n      artsDispatch({\n        type: \"SET_CHOSEN\",\n        data: id\n      });\n    };\n  };\n\n  const onAddedArt = () => {\n    const [rows, id] = createArt(settings);\n    artsDispatch({\n      type: \"ADD_ART\",\n      data: {\n        rows: rows,\n        id: id\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.Arts,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onAddedArt\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.Wrapper,\n      children: arts.arts.map(art => /*#__PURE__*/_jsxDEV(Art, { ...art,\n        clicked: artClickedHandler(art.id)\n      }, art.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Arts, \"M7xTUTbxVX8tREuQ9jqMOVm3ABQ=\");\n\n_c = Arts;\nexport default Arts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Arts\");","map":{"version":3,"sources":["C:/Users/Pechenka/pixel-app-ts/src/components/Arts/Arts.tsx"],"names":["useContext","classes","Art","ArtsContext","SettingsContext","createArt","Arts","props","arts","artsDispatch","settings","artClickedHandler","id","e","type","data","onAddedArt","rows","Wrapper","map","art"],"mappings":";;;AAAA,SAA4BA,UAA5B,QAA8C,OAA9C;AAEA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,GAAP,MAAgB,WAAhB;AAEA,SAASC,WAAT,QAA4B,4BAA5B;AACA,SAASC,eAAT,QAAgC,gCAAhC;AAEA,OAAOC,SAAP,MAAsB,qBAAtB;;;AAIA,MAAMC,IAAI,GAAIC,KAAD,IAAsB;AAAA;;AACjC,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAyBT,UAAU,CAACG,WAAD,CAAzC;AACA,QAAM;AAAEO,IAAAA;AAAF,MAAeV,UAAU,CAACI,eAAD,CAA/B;;AAEA,QAAMO,iBAAiB,GAAIC,EAAD,IAAgB;AACxC,WAASC,CAAD,IAAO;AACbJ,MAAAA,YAAY,CAAC;AAAEK,QAAAA,IAAI,EAAE,YAAR;AAAsBC,QAAAA,IAAI,EAAEH;AAA5B,OAAD,CAAZ;AACD,KAFD;AAGD,GAJD;;AAMA,QAAMI,UAAU,GAAG,MAAM;AACvB,UAAM,CAACC,IAAD,EAAOL,EAAP,IAAaP,SAAS,CAACK,QAAD,CAA5B;AACAD,IAAAA,YAAY,CAAC;AACXK,MAAAA,IAAI,EAAE,SADK;AAEXC,MAAAA,IAAI,EAAE;AACJE,QAAAA,IAAI,EAAEA,IADF;AAEJL,QAAAA,EAAE,EAAEA;AAFA;AAFK,KAAD,CAAZ;AAOD,GATD;;AAWA,sBACE;AAAK,IAAA,SAAS,EAAEX,OAAO,CAACK,IAAxB;AAAA,4BACE;AAAQ,MAAA,OAAO,EAAEU;AAAjB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAEf,OAAO,CAACiB,OAAxB;AAAA,gBACGV,IAAI,CAACA,IAAL,CAAUW,GAAV,CAAeC,GAAD,iBACb,QAAC,GAAD,OAAsBA,GAAtB;AAA2B,QAAA,OAAO,EAAET,iBAAiB,CAACS,GAAG,CAACR,EAAL;AAArD,SAAUQ,GAAG,CAACR,EAAd;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CA/BD;;GAAMN,I;;KAAAA,I;AAiCN,eAAeA,IAAf","sourcesContent":["import { MouseEventHandler, useContext } from \"react\";\r\n\r\nimport classes from \"./Arts.module.css\";\r\nimport Art from \"./Art/Art\";\r\n\r\nimport { ArtsContext } from \"../../context/arts-context\";\r\nimport { SettingsContext } from \"../../context/settings-context\";\r\n\r\nimport createArt from \"../../hoc/createArt\";\r\n\r\ninterface ArtsProps {}\r\n\r\nconst Arts = (props: ArtsProps) => {\r\n  const { arts, artsDispatch } = useContext(ArtsContext)!;\r\n  const { settings } = useContext(SettingsContext);\r\n\r\n  const artClickedHandler = (id: string) => {\r\n    return ((e) => {\r\n      artsDispatch({ type: \"SET_CHOSEN\", data: id });\r\n    }) as MouseEventHandler;\r\n  };\r\n\r\n  const onAddedArt = () => {\r\n    const [rows, id] = createArt(settings!);\r\n    artsDispatch({\r\n      type: \"ADD_ART\",\r\n      data: {\r\n        rows: rows,\r\n        id: id,\r\n      },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className={classes.Arts}>\r\n      <button onClick={onAddedArt}></button>\r\n      <div className={classes.Wrapper}>\r\n        {arts.arts.map((art) => (\r\n          <Art key={art.id} {...art} clicked={artClickedHandler(art.id)} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Arts;\r\n"]},"metadata":{},"sourceType":"module"}