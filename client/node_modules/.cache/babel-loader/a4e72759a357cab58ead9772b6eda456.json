{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pechenka\\\\pixel-app-ts\\\\client\\\\src\\\\components\\\\SaveImage\\\\SaveImage.tsx\",\n    _s = $RefreshSig$();\n\nimport { useContext, useEffect, useRef, useState } from \"react\";\nimport classes from \"./SaveImage.module.css\";\nimport { ArtsContext } from \"../../context/arts-context\";\nimport Modal from \"../UI/Modal/Modal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SaveImage = () => {\n  _s();\n\n  const {\n    artsState\n  } = useContext(ArtsContext);\n  const socket = useRef(null);\n  const [showModal, setShowModal] = useState(false);\n  const [imgUrl, setImgUrl] = useState(\"\");\n  useEffect(() => {\n    const s = new WebSocket(\"ws://localhost:3001\");\n\n    s.onopen = e => {\n      console.log(\"connection\");\n    };\n\n    s.onmessage = function (e) {\n      const id = JSON.parse(e.data).id;\n      fetch(\"/get-img/\" + id, {\n        method: \"GET\"\n      }).then(res => {\n        return res.blob();\n      }).then(data => {\n        setShowModal(true);\n        const blob = new Blob([data]);\n        const url = window.URL.createObjectURL(blob);\n        setImgUrl(url);\n      }).catch(err => {\n        console.log(err.message);\n      });\n    };\n\n    socket.current = s;\n  }, []);\n\n  const onSaveImage = e => {\n    e.preventDefault();\n    const art = artsState.arts.find(art => art.id === artsState.chosen);\n    socket.current.send(JSON.stringify({\n      type: \"CREATE_IMG\",\n      img: art,\n      cs: artsState.settings.columnSize,\n      rs: artsState.settings.rowSize,\n      dc: artsState.settings.defColor\n    }));\n  };\n\n  const onCloseModal = () => {\n    setShowModal(false);\n  };\n\n  const onDownloadImg = () => {\n    const link = document.createElement(\"a\");\n    link.download = \"download.png\";\n    link.href = imgUrl;\n    link.click();\n  };\n\n  const chosenArt = artsState.arts.find(art => art.id === artsState.chosen);\n\n  const modal = /*#__PURE__*/_jsxDEV(Modal, {\n    closed: onCloseModal,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.ImgContainer,\n      children: chosenArt.rows.map((row, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.ArtRow,\n        children: row.map(pix => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            backgroundColor: pix.color,\n            width: \"10px\",\n            height: \"10px\"\n          }\n        }, pix.ypos.toString() + pix.xpos, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 15\n        }, this))\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: classes.DownloadButton,\n      onClick: onDownloadImg,\n      children: \"DOWNLOAD\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: onSaveImage,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: classes.SaveImage,\n      children: \"DOWNLOAD\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), showModal && modal]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SaveImage, \"m2ieeNuJa3Mob9mXmEFh1CvFLJQ=\");\n\n_c = SaveImage;\nexport default SaveImage;\n\nvar _c;\n\n$RefreshReg$(_c, \"SaveImage\");","map":{"version":3,"sources":["C:/Users/Pechenka/pixel-app-ts/client/src/components/SaveImage/SaveImage.tsx"],"names":["useContext","useEffect","useRef","useState","classes","ArtsContext","Modal","SaveImage","artsState","socket","showModal","setShowModal","imgUrl","setImgUrl","s","WebSocket","onopen","e","console","log","onmessage","id","JSON","parse","data","fetch","method","then","res","blob","Blob","url","window","URL","createObjectURL","catch","err","message","current","onSaveImage","preventDefault","art","arts","find","chosen","send","stringify","type","img","cs","settings","columnSize","rs","rowSize","dc","defColor","onCloseModal","onDownloadImg","link","document","createElement","download","href","click","chosenArt","modal","ImgContainer","rows","map","row","i","ArtRow","pix","backgroundColor","color","width","height","ypos","toString","xpos","DownloadButton"],"mappings":"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","sourcesContent":["import {\r\n  FormEventHandler,\r\n  useContext,\r\n  useEffect,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\n\r\nimport classes from \"./SaveImage.module.css\";\r\nimport { ArtsContext } from \"../../context/arts-context\";\r\nimport Modal from \"../UI/Modal/Modal\";\r\n\r\nconst SaveImage = () => {\r\n  const { artsState } = useContext(ArtsContext)!;\r\n  const socket = useRef<null | WebSocket>(null);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [imgUrl, setImgUrl] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const s = new WebSocket(\"ws://localhost:3001\");\r\n    s.onopen = (e) => {\r\n      console.log(\"connection\");\r\n    };\r\n    s.onmessage = function (e) {\r\n      const id = JSON.parse(e.data).id;\r\n      fetch(\"/get-img/\" + id, {\r\n        method: \"GET\",\r\n      })\r\n        .then((res) => {\r\n          return res.blob();\r\n        })\r\n        .then((data) => {\r\n          setShowModal(true);\r\n          const blob = new Blob([data]);\r\n          const url = window.URL.createObjectURL(blob);\r\n          setImgUrl(url);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err.message);\r\n        });\r\n    };\r\n    socket.current = s;\r\n  }, []);\r\n\r\n  const onSaveImage: FormEventHandler = (e) => {\r\n    e.preventDefault();\r\n    const art = artsState.arts.find((art) => art.id === artsState.chosen)!;\r\n    socket.current!.send(\r\n      JSON.stringify({\r\n        type: \"CREATE_IMG\",\r\n        img: art,\r\n        cs: artsState.settings.columnSize,\r\n        rs: artsState.settings.rowSize,\r\n        dc: artsState.settings.defColor,\r\n      })\r\n    );\r\n  };\r\n\r\n  const onCloseModal = () => {\r\n    setShowModal(false);\r\n  };\r\n\r\n  const onDownloadImg = () => {\r\n    const link = document.createElement(\"a\");\r\n    link.download = \"download.png\";\r\n    link.href = imgUrl;\r\n    link.click();\r\n  };\r\n\r\n  const chosenArt = artsState.arts.find((art) => art.id === artsState.chosen)!;\r\n\r\n  const modal = (\r\n    <Modal closed={onCloseModal}>\r\n      <div className={classes.ImgContainer}>\r\n        {chosenArt.rows.map((row, i) => (\r\n          <div className={classes.ArtRow} key={i}>\r\n            {row.map((pix) => (\r\n              <div\r\n                key={pix.ypos.toString() + pix.xpos}\r\n                style={{\r\n                  backgroundColor: pix.color,\r\n                  width: \"10px\",\r\n                  height: \"10px\",\r\n                }}\r\n              ></div>\r\n            ))}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <button className={classes.DownloadButton} onClick={onDownloadImg}>\r\n        DOWNLOAD\r\n      </button>\r\n    </Modal>\r\n  );\r\n\r\n  return (\r\n    <form onSubmit={onSaveImage}>\r\n      <button type=\"submit\" className={classes.SaveImage}>\r\n        DOWNLOAD\r\n      </button>\r\n      {showModal && modal}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default SaveImage;\r\n"]},"metadata":{},"sourceType":"module"}