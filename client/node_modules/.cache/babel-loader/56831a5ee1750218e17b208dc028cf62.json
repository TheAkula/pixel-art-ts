{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pechenka\\\\pixel-app-ts\\\\src\\\\components\\\\ToolsBar\\\\ToolsBar.tsx\",\n    _s = $RefreshSig$();\n\nimport classes from \"./ToolsBar.module.css\";\nimport Tool from \"./Brush/Brush\";\nimport { useContext } from \"react\";\nimport { SettingsContext } from \"../../context/settings-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ToolsBar = () => {\n  _s();\n\n  const {\n    settings,\n    settingsDispatch\n  } = useContext(SettingsContext);\n\n  const onClickHandler = id => {\n    return e => {\n      e.target.classList.toggle(\"active\");\n      settingsDispatch({\n        type: \"SET_TOOL\",\n        data: settings.tool === id ? null : id\n      });\n    };\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.ToolsBar,\n    children: [/*#__PURE__*/_jsxDEV(Tool, {\n      classes: [classes.Tool, classes.Brush, settings.tool === \"BRUSH\" ? classes.active : \"\"],\n      clicked: onClickHandler(\"BRUSH\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Tool, {\n      classes: [classes.Tool, classes.Eraser],\n      clicked: onClickHandler(\"ERASER\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ToolsBar, \"72JFhWNFdBAqBjw/YgDgzRO+bkY=\");\n\n_c = ToolsBar;\nexport default ToolsBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"ToolsBar\");","map":{"version":3,"sources":["C:/Users/Pechenka/pixel-app-ts/src/components/ToolsBar/ToolsBar.tsx"],"names":["classes","Tool","useContext","SettingsContext","ToolsBar","settings","settingsDispatch","onClickHandler","id","e","target","classList","toggle","type","data","tool","Brush","active","Eraser"],"mappings":";;;AAAA,OAAOA,OAAP,MAAoB,uBAApB;AAEA,OAAOC,IAAP,MAAiB,eAAjB;AACA,SAA4BC,UAA5B,QAA8C,OAA9C;AAEA,SAASC,eAAT,QAAgC,gCAAhC;;;AAOA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAAiCJ,UAAU,CAACC,eAAD,CAAjD;;AAEA,QAAMI,cAAc,GAAIC,EAAD,IAAgB;AACrC,WAASC,CAAD,IAAO;AACZA,MAAAA,CAAC,CAACC,MAAH,CAAgCC,SAAhC,CAA0CC,MAA1C,CAAiD,QAAjD;AACAN,MAAAA,gBAAgB,CAAE;AAChBO,QAAAA,IAAI,EAAE,UADU;AAEhBC,QAAAA,IAAI,EAAET,QAAQ,CAAEU,IAAV,KAAmBP,EAAnB,GAAwB,IAAxB,GAA+BA;AAFrB,OAAF,CAAhB;AAID,KAND;AAOD,GARD;;AAUA,sBACE;AAAK,IAAA,SAAS,EAAER,OAAO,CAACI,QAAxB;AAAA,4BACE,QAAC,IAAD;AACE,MAAA,OAAO,EAAE,CACPJ,OAAO,CAACC,IADD,EAEPD,OAAO,CAACgB,KAFD,EAGPX,QAAQ,CAAEU,IAAV,KAAmB,OAAnB,GAA6Bf,OAAO,CAACiB,MAArC,GAA8C,EAHvC,CADX;AAME,MAAA,OAAO,EAAEV,cAAc,CAAC,OAAD;AANzB;AAAA;AAAA;AAAA;AAAA,YADF,eASE,QAAC,IAAD;AACE,MAAA,OAAO,EAAE,CAACP,OAAO,CAACC,IAAT,EAAeD,OAAO,CAACkB,MAAvB,CADX;AAEE,MAAA,OAAO,EAAEX,cAAc,CAAC,QAAD;AAFzB;AAAA;AAAA;AAAA;AAAA,YATF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CA7BD;;GAAMH,Q;;KAAAA,Q;AA+BN,eAAeA,QAAf","sourcesContent":["import classes from \"./ToolsBar.module.css\";\r\n\r\nimport Tool from \"./Brush/Brush\";\r\nimport { MouseEventHandler, useContext } from \"react\";\r\n\r\nimport { SettingsContext } from \"../../context/settings-context\";\r\n\r\nexport interface ToolProps {\r\n  clicked: MouseEventHandler<HTMLButtonElement>;\r\n  classes: string[];\r\n}\r\n\r\nconst ToolsBar = () => {\r\n  const { settings, settingsDispatch } = useContext(SettingsContext);\r\n\r\n  const onClickHandler = (id: string) => {\r\n    return ((e) => {\r\n      (e.target as HTMLButtonElement).classList.toggle(\"active\");\r\n      settingsDispatch!({\r\n        type: \"SET_TOOL\",\r\n        data: settings!.tool === id ? null : id,\r\n      });\r\n    }) as MouseEventHandler<HTMLButtonElement>;\r\n  };\r\n\r\n  return (\r\n    <div className={classes.ToolsBar}>\r\n      <Tool\r\n        classes={[\r\n          classes.Tool,\r\n          classes.Brush,\r\n          settings!.tool === \"BRUSH\" ? classes.active : \"\",\r\n        ]}\r\n        clicked={onClickHandler(\"BRUSH\")}\r\n      />\r\n      <Tool\r\n        classes={[classes.Tool, classes.Eraser]}\r\n        clicked={onClickHandler(\"ERASER\")}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ToolsBar;\r\n"]},"metadata":{},"sourceType":"module"}