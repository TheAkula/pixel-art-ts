{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pechenka\\\\pixel-app-ts\\\\client\\\\src\\\\components\\\\SaveImage\\\\SaveImage.tsx\",\n    _s = $RefreshSig$();\n\nimport { useContext, useState } from \"react\";\nimport classes from \"./SaveImage.module.css\";\nimport { ArtsContext } from \"../../context/arts-context\";\nimport Modal from \"../UI/Modal/Modal\";\nimport Button from \"../UI/Button/Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SaveImage = () => {\n  _s();\n\n  const {\n    artsState\n  } = useContext(ArtsContext);\n  const [showModal, setShowModal] = useState(false);\n  const [imgUrl, setImgUrl] = useState(\"\");\n\n  const onSaveImage = e => {\n    e.preventDefault();\n    const s = new WebSocket(\"wss://pixel-art-ts.herokuapp.com\");\n\n    s.onopen = e => {\n      const art = artsState.arts.find(art => art.id === artsState.chosen);\n      console.log(\"ws connection\");\n      s.send(JSON.stringify({\n        type: \"CREATE_IMG\",\n        img: art,\n        ps: artsState.settings.pixelSize,\n        cs: artsState.settings.columnSize,\n        rs: artsState.settings.rowSize,\n        dc: artsState.settings.defColor\n      }));\n    };\n\n    s.onmessage = function (e) {\n      const id = JSON.parse(e.data).id;\n      fetch(\"/get-img/\" + id, {\n        method: \"GET\"\n      }).then(res => {\n        return res.blob();\n      }).then(data => {\n        setShowModal(true);\n        const blob = new Blob([data]);\n        const url = window.URL.createObjectURL(blob);\n        setImgUrl(url);\n        s.close();\n      }).catch(err => {\n        s.close();\n      });\n    };\n\n    s.onclose = () => {\n      console.log(\"close ws\");\n    };\n  };\n\n  const onCloseModal = () => {\n    setShowModal(false);\n  };\n\n  const onDownloadImg = () => {\n    const link = document.createElement(\"a\");\n    link.download = \"download.png\";\n    link.href = imgUrl;\n    link.click();\n  };\n\n  const chosenArt = artsState.arts.find(art => art.id === artsState.chosen);\n  let modal;\n\n  if (showModal) {\n    modal = /*#__PURE__*/_jsxDEV(Modal, {\n      closed: onCloseModal,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          textAlign: \"center\"\n        },\n        children: \"PREVIEW\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.ImgContainer,\n        children: chosenArt.rows.map((row, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.ArtRow,\n          children: row.map(pix => /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              backgroundColor: pix.color,\n              width: \"10px\",\n              height: \"10px\"\n            }\n          }, pix.ypos.toString() + pix.xpos, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 17\n          }, this))\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: classes.DownloadButton,\n        onClick: onDownloadImg,\n        children: \"DOWNLOAD\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: onSaveImage,\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      type: \"submit\",\n      children: \"DOWNLOAD\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), showModal && modal]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SaveImage, \"0UDk8iKmMblfMey6DDTlH5yuEik=\");\n\n_c = SaveImage;\nexport default SaveImage;\n\nvar _c;\n\n$RefreshReg$(_c, \"SaveImage\");","map":{"version":3,"sources":["C:/Users/Pechenka/pixel-app-ts/client/src/components/SaveImage/SaveImage.tsx"],"names":["useContext","useState","classes","ArtsContext","Modal","Button","SaveImage","artsState","showModal","setShowModal","imgUrl","setImgUrl","onSaveImage","e","preventDefault","s","WebSocket","onopen","art","arts","find","id","chosen","console","log","send","JSON","stringify","type","img","ps","settings","pixelSize","cs","columnSize","rs","rowSize","dc","defColor","onmessage","parse","data","fetch","method","then","res","blob","Blob","url","window","URL","createObjectURL","close","catch","err","onclose","onCloseModal","onDownloadImg","link","document","createElement","download","href","click","chosenArt","modal","textAlign","ImgContainer","rows","map","row","i","ArtRow","pix","backgroundColor","color","width","height","ypos","toString","xpos","DownloadButton"],"mappings":";;;AAAA,SAEEA,UAFF,EAKEC,QALF,QAMO,OANP;AAQA,OAAOC,OAAP,MAAoB,wBAApB;AACA,SAASC,WAAT,QAA4B,4BAA5B;AACA,OAAOC,KAAP,MAAkB,mBAAlB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACtB,QAAM;AAAEC,IAAAA;AAAF,MAAgBP,UAAU,CAACG,WAAD,CAAhC;AACA,QAAM,CAACK,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACS,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,EAAD,CAApC;;AAEA,QAAMW,WAA6B,GAAIC,CAAD,IAAO;AAC3CA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMC,CAAC,GAAG,IAAIC,SAAJ,CAAc,kCAAd,CAAV;;AACAD,IAAAA,CAAC,CAACE,MAAF,GAAYJ,CAAD,IAAO;AAChB,YAAMK,GAAG,GAAGX,SAAS,CAACY,IAAV,CAAeC,IAAf,CAAqBF,GAAD,IAASA,GAAG,CAACG,EAAJ,KAAWd,SAAS,CAACe,MAAlD,CAAZ;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACAT,MAAAA,CAAC,CAACU,IAAF,CACEC,IAAI,CAACC,SAAL,CAAe;AACbC,QAAAA,IAAI,EAAE,YADO;AAEbC,QAAAA,GAAG,EAAEX,GAFQ;AAGbY,QAAAA,EAAE,EAAEvB,SAAS,CAACwB,QAAV,CAAmBC,SAHV;AAIbC,QAAAA,EAAE,EAAE1B,SAAS,CAACwB,QAAV,CAAmBG,UAJV;AAKbC,QAAAA,EAAE,EAAE5B,SAAS,CAACwB,QAAV,CAAmBK,OALV;AAMbC,QAAAA,EAAE,EAAE9B,SAAS,CAACwB,QAAV,CAAmBO;AANV,OAAf,CADF;AAUD,KAbD;;AAcAvB,IAAAA,CAAC,CAACwB,SAAF,GAAc,UAAU1B,CAAV,EAAa;AACzB,YAAMQ,EAAE,GAAGK,IAAI,CAACc,KAAL,CAAW3B,CAAC,CAAC4B,IAAb,EAAmBpB,EAA9B;AACAqB,MAAAA,KAAK,CAAC,cAAcrB,EAAf,EAAmB;AACtBsB,QAAAA,MAAM,EAAE;AADc,OAAnB,CAAL,CAGGC,IAHH,CAGSC,GAAD,IAAS;AACb,eAAOA,GAAG,CAACC,IAAJ,EAAP;AACD,OALH,EAMGF,IANH,CAMSH,IAAD,IAAU;AACdhC,QAAAA,YAAY,CAAC,IAAD,CAAZ;AACA,cAAMqC,IAAI,GAAG,IAAIC,IAAJ,CAAS,CAACN,IAAD,CAAT,CAAb;AACA,cAAMO,GAAG,GAAGC,MAAM,CAACC,GAAP,CAAWC,eAAX,CAA2BL,IAA3B,CAAZ;AACAnC,QAAAA,SAAS,CAACqC,GAAD,CAAT;AACAjC,QAAAA,CAAC,CAACqC,KAAF;AACD,OAZH,EAaGC,KAbH,CAaUC,GAAD,IAAS;AACdvC,QAAAA,CAAC,CAACqC,KAAF;AACD,OAfH;AAgBD,KAlBD;;AAmBArC,IAAAA,CAAC,CAACwC,OAAF,GAAY,MAAM;AAChBhC,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACD,KAFD;AAGD,GAvCD;;AAyCA,QAAMgC,YAAY,GAAG,MAAM;AACzB/C,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,GAFD;;AAIA,QAAMgD,aAAa,GAAG,MAAM;AAC1B,UAAMC,IAAI,GAAGC,QAAQ,CAACC,aAAT,CAAuB,GAAvB,CAAb;AACAF,IAAAA,IAAI,CAACG,QAAL,GAAgB,cAAhB;AACAH,IAAAA,IAAI,CAACI,IAAL,GAAYpD,MAAZ;AACAgD,IAAAA,IAAI,CAACK,KAAL;AACD,GALD;;AAOA,QAAMC,SAAS,GAAGzD,SAAS,CAACY,IAAV,CAAeC,IAAf,CAAqBF,GAAD,IAASA,GAAG,CAACG,EAAJ,KAAWd,SAAS,CAACe,MAAlD,CAAlB;AAEA,MAAI2C,KAAJ;;AACA,MAAIzD,SAAJ,EAAe;AACbyD,IAAAA,KAAK,gBACH,QAAC,KAAD;AAAO,MAAA,MAAM,EAAET,YAAf;AAAA,8BACE;AAAI,QAAA,KAAK,EAAE;AAAEU,UAAAA,SAAS,EAAE;AAAb,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAEhE,OAAO,CAACiE,YAAxB;AAAA,kBACGH,SAAS,CAACI,IAAV,CAAeC,GAAf,CAAmB,CAACC,GAAD,EAAMC,CAAN,kBAClB;AAAK,UAAA,SAAS,EAAErE,OAAO,CAACsE,MAAxB;AAAA,oBACGF,GAAG,CAACD,GAAJ,CAASI,GAAD,iBACP;AAEE,YAAA,KAAK,EAAE;AACLC,cAAAA,eAAe,EAAED,GAAG,CAACE,KADhB;AAELC,cAAAA,KAAK,EAAE,MAFF;AAGLC,cAAAA,MAAM,EAAE;AAHH;AAFT,aACOJ,GAAG,CAACK,IAAJ,CAASC,QAAT,KAAsBN,GAAG,CAACO,IADjC;AAAA;AAAA;AAAA;AAAA,kBADD;AADH,WAAqCT,CAArC;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cAFF,eAkBE;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,SAAS,EAAErE,OAAO,CAAC+E,cAFrB;AAGE,QAAA,OAAO,EAAExB,aAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAlBF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AA4BD;;AAED,sBACE;AAAM,IAAA,QAAQ,EAAE7C,WAAhB;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGJ,SAAS,IAAIyD,KAFhB;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CAjGD;;GAAM3D,S;;KAAAA,S;AAmGN,eAAeA,SAAf","sourcesContent":["import {\r\n  FormEventHandler,\r\n  useContext,\r\n  useEffect,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\n\r\nimport classes from \"./SaveImage.module.css\";\r\nimport { ArtsContext } from \"../../context/arts-context\";\r\nimport Modal from \"../UI/Modal/Modal\";\r\nimport Button from \"../UI/Button/Button\";\r\n\r\nconst SaveImage = () => {\r\n  const { artsState } = useContext(ArtsContext)!;\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [imgUrl, setImgUrl] = useState(\"\");\r\n\r\n  const onSaveImage: FormEventHandler = (e) => {\r\n    e.preventDefault();\r\n    const s = new WebSocket(\"wss://pixel-art-ts.herokuapp.com\");\r\n    s.onopen = (e) => {\r\n      const art = artsState.arts.find((art) => art.id === artsState.chosen)!;\r\n      console.log(\"ws connection\");\r\n      s.send(\r\n        JSON.stringify({\r\n          type: \"CREATE_IMG\",\r\n          img: art,\r\n          ps: artsState.settings.pixelSize,\r\n          cs: artsState.settings.columnSize,\r\n          rs: artsState.settings.rowSize,\r\n          dc: artsState.settings.defColor,\r\n        })\r\n      );\r\n    };\r\n    s.onmessage = function (e) {\r\n      const id = JSON.parse(e.data).id;\r\n      fetch(\"/get-img/\" + id, {\r\n        method: \"GET\",\r\n      })\r\n        .then((res) => {\r\n          return res.blob();\r\n        })\r\n        .then((data) => {\r\n          setShowModal(true);\r\n          const blob = new Blob([data]);\r\n          const url = window.URL.createObjectURL(blob);\r\n          setImgUrl(url);\r\n          s.close();\r\n        })\r\n        .catch((err) => {\r\n          s.close();\r\n        });\r\n    };\r\n    s.onclose = () => {\r\n      console.log(\"close ws\");\r\n    };\r\n  };\r\n\r\n  const onCloseModal = () => {\r\n    setShowModal(false);\r\n  };\r\n\r\n  const onDownloadImg = () => {\r\n    const link = document.createElement(\"a\");\r\n    link.download = \"download.png\";\r\n    link.href = imgUrl;\r\n    link.click();\r\n  };\r\n\r\n  const chosenArt = artsState.arts.find((art) => art.id === artsState.chosen)!;\r\n\r\n  let modal;\r\n  if (showModal) {\r\n    modal = (\r\n      <Modal closed={onCloseModal}>\r\n        <h2 style={{ textAlign: \"center\" }}>PREVIEW</h2>\r\n        <div className={classes.ImgContainer}>\r\n          {chosenArt.rows.map((row, i) => (\r\n            <div className={classes.ArtRow} key={i}>\r\n              {row.map((pix) => (\r\n                <div\r\n                  key={pix.ypos.toString() + pix.xpos}\r\n                  style={{\r\n                    backgroundColor: pix.color,\r\n                    width: \"10px\",\r\n                    height: \"10px\",\r\n                  }}\r\n                ></div>\r\n              ))}\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <button\r\n          type=\"button\"\r\n          className={classes.DownloadButton}\r\n          onClick={onDownloadImg}\r\n        >\r\n          DOWNLOAD\r\n        </button>\r\n      </Modal>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={onSaveImage}>\r\n      <Button type=\"submit\">DOWNLOAD</Button>\r\n      {showModal && modal}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default SaveImage;\r\n"]},"metadata":{},"sourceType":"module"}