{"ast":null,"code":"import{useContext}from\"react\";import classes from\"./ColorsPanel.module.css\";import ColorPick from\"./ColorPick/ColorPick\";import{ArtsContext}from\"../../context/arts-context\";import{jsx as _jsx}from\"react/jsx-runtime\";var COLORS=[\"red\",\"blue\",\"green\",\"#00008b\",\"#ff00ff\",\"white\",\"black\"];var ColorsPanel=function ColorsPanel(){var _ref=useContext(ArtsContext),artsState=_ref.artsState,artsDispatch=_ref.artsDispatch;var onPickColor=function onPickColor(c){return function(e){artsDispatch({type:\"SET_COLOR\",data:c});};};return/*#__PURE__*/_jsx(\"div\",{className:classes.ColorsPanel,children:COLORS.map(function(color){return/*#__PURE__*/_jsx(ColorPick,{active:artsState.settings.color===color,color:color,clicked:onPickColor(color)},color);})});};export default ColorsPanel;","map":{"version":3,"sources":["C:/Users/Pechenka/pixel-app-ts/client/src/components/ColorsPanel/ColorsPanel.tsx"],"names":["useContext","classes","ColorPick","ArtsContext","COLORS","ColorsPanel","artsState","artsDispatch","onPickColor","c","e","type","data","map","color","settings"],"mappings":"AAAA,OAA4BA,UAA5B,KAA8C,OAA9C,CAEA,MAAOC,CAAAA,OAAP,KAAoB,0BAApB,CACA,MAAOC,CAAAA,SAAP,KAAsB,uBAAtB,CAEA,OAASC,WAAT,KAA4B,4BAA5B,C,2CAEA,GAAMC,CAAAA,MAAM,CAAG,CAAC,KAAD,CAAQ,MAAR,CAAgB,OAAhB,CAAyB,SAAzB,CAAoC,SAApC,CAA+C,OAA/C,CAAwD,OAAxD,CAAf,CAEA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,CACxB,SAAoCL,UAAU,CAACG,WAAD,CAA9C,CAAQG,SAAR,MAAQA,SAAR,CAAmBC,YAAnB,MAAmBA,YAAnB,CAEA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,CAAD,CAAe,CACjC,MAAQ,UAACC,CAAD,CAAO,CACbH,YAAY,CAAE,CAAEI,IAAI,CAAE,WAAR,CAAqBC,IAAI,CAAEH,CAA3B,CAAF,CAAZ,CACD,CAFD,CAGD,CAJD,CAMA,mBACE,YAAK,SAAS,CAAER,OAAO,CAACI,WAAxB,UACGD,MAAM,CAACS,GAAP,CAAW,SAACC,KAAD,qBACV,KAAC,SAAD,EACE,MAAM,CAAER,SAAS,CAACS,QAAV,CAAmBD,KAAnB,GAA6BA,KADvC,CAGE,KAAK,CAAEA,KAHT,CAIE,OAAO,CAAEN,WAAW,CAACM,KAAD,CAJtB,EAEOA,KAFP,CADU,EAAX,CADH,EADF,CAYD,CArBD,CAuBA,cAAeT,CAAAA,WAAf","sourcesContent":["import { MouseEventHandler, useContext } from \"react\";\r\n\r\nimport classes from \"./ColorsPanel.module.css\";\r\nimport ColorPick from \"./ColorPick/ColorPick\";\r\n\r\nimport { ArtsContext } from \"../../context/arts-context\";\r\n\r\nconst COLORS = [\"red\", \"blue\", \"green\", \"#00008b\", \"#ff00ff\", \"white\", \"black\"];\r\n\r\nconst ColorsPanel = () => {\r\n  const { artsState, artsDispatch } = useContext(ArtsContext)!;\r\n\r\n  const onPickColor = (c: string) => {\r\n    return ((e) => {\r\n      artsDispatch!({ type: \"SET_COLOR\", data: c });\r\n    }) as MouseEventHandler;\r\n  };\r\n\r\n  return (\r\n    <div className={classes.ColorsPanel}>\r\n      {COLORS.map((color) => (\r\n        <ColorPick\r\n          active={artsState.settings.color === color}\r\n          key={color}\r\n          color={color}\r\n          clicked={onPickColor(color)}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ColorsPanel;\r\n"]},"metadata":{},"sourceType":"module"}