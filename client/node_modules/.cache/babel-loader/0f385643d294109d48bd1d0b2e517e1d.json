{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pechenka\\\\pixel-app-ts\\\\src\\\\components\\\\ColorsPanel\\\\ColorsPanel.tsx\",\n    _s = $RefreshSig$();\n\nimport { useContext } from \"react\";\nimport { SettingsContext } from \"../../context/settings-context\";\nimport classes from \"./ColorsPanel.module.css\";\nimport ColorPick from \"./ColorPick/ColorPick\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst COLORS = [\"red\", \"blue\", \"green\"];\n\nconst ColorsPanel = () => {\n  _s();\n\n  const {\n    settings,\n    settingsDispatch\n  } = useContext(SettingsContext);\n\n  const onPickColor = c => {\n    return e => {\n      settingsDispatch({\n        type: \"SET_COLOR\",\n        data: c\n      });\n    };\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.ColorsPanel,\n    children: COLORS.map(color => /*#__PURE__*/_jsxDEV(ColorPick, {\n      color: color,\n      clicked: onPickColor(color)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ColorsPanel, \"72JFhWNFdBAqBjw/YgDgzRO+bkY=\");\n\n_c = ColorsPanel;\nexport default ColorsPanel;\n\nvar _c;\n\n$RefreshReg$(_c, \"ColorsPanel\");","map":{"version":3,"sources":["C:/Users/Pechenka/pixel-app-ts/src/components/ColorsPanel/ColorsPanel.tsx"],"names":["useContext","SettingsContext","classes","ColorPick","COLORS","ColorsPanel","settings","settingsDispatch","onPickColor","c","e","type","data","map","color"],"mappings":";;;AAAA,SAA4BA,UAA5B,QAA8C,OAA9C;AAEA,SAASC,eAAT,QAAgC,gCAAhC;AAEA,OAAOC,OAAP,MAAoB,0BAApB;AACA,OAAOC,SAAP,MAAsB,uBAAtB;;AAEA,MAAMC,MAAM,GAAG,CAAC,KAAD,EAAQ,MAAR,EAAgB,OAAhB,CAAf;;AAEA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACxB,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAAiCP,UAAU,CAACC,eAAD,CAAjD;;AAEA,QAAMO,WAAW,GAAIC,CAAD,IAAe;AACjC,WAASC,CAAD,IAAO;AACbH,MAAAA,gBAAgB,CAAE;AAAEI,QAAAA,IAAI,EAAE,WAAR;AAAqBC,QAAAA,IAAI,EAAEH;AAA3B,OAAF,CAAhB;AACD,KAFD;AAGD,GAJD;;AAMA,sBACE;AAAK,IAAA,SAAS,EAAEP,OAAO,CAACG,WAAxB;AAAA,cACGD,MAAM,CAACS,GAAP,CAAYC,KAAD,iBACV,QAAC,SAAD;AAAW,MAAA,KAAK,EAAEA,KAAlB;AAAyB,MAAA,OAAO,EAAEN,WAAW,CAACM,KAAD;AAA7C;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CAhBD;;GAAMT,W;;KAAAA,W;AAkBN,eAAeA,WAAf","sourcesContent":["import { MouseEventHandler, useContext } from \"react\";\r\n\r\nimport { SettingsContext } from \"../../context/settings-context\";\r\n\r\nimport classes from \"./ColorsPanel.module.css\";\r\nimport ColorPick from \"./ColorPick/ColorPick\";\r\n\r\nconst COLORS = [\"red\", \"blue\", \"green\"];\r\n\r\nconst ColorsPanel = () => {\r\n  const { settings, settingsDispatch } = useContext(SettingsContext);\r\n\r\n  const onPickColor = (c: string) => {\r\n    return ((e) => {\r\n      settingsDispatch!({ type: \"SET_COLOR\", data: c });\r\n    }) as MouseEventHandler;\r\n  };\r\n\r\n  return (\r\n    <div className={classes.ColorsPanel}>\r\n      {COLORS.map((color) => (\r\n        <ColorPick color={color} clicked={onPickColor(color)} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ColorsPanel;\r\n"]},"metadata":{},"sourceType":"module"}