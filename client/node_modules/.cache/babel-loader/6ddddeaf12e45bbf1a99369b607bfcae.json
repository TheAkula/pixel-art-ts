{"ast":null,"code":"import _slicedToArray from\"C:/Users/Pechenka/pixel-app-ts/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useContext,useState}from\"react\";import{SettingsContext}from\"../../context/settings-context\";import{ArtsContext}from\"../../context/arts-context\";import SizeToggle from\"./SizeToggle/SizeToggle\";import Reset from\"./Reset/Reset\";import PreviewAnimation from\"./PreviewAnimation/PreviewAnimation\";import createArt from\"../../hoc/createArt\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var SettingsBar=function SettingsBar(){var _useState=useState(1),_useState2=_slicedToArray(_useState,2),duration=_useState2[0],setDuration=_useState2[1];var _useContext=useContext(SettingsContext),settings=_useContext.settings,settingsDispatch=_useContext.settingsDispatch;var _ref=useContext(ArtsContext),arts=_ref.arts,artsDispatch=_ref.artsDispatch;var onAddRow=function onAddRow(e){settingsDispatch({type:\"ADD_ROW\"});var row=[];for(var i=0;i<settings.columnSize;i++){row.push({xpos:i,ypos:settings.rowSize,color:settings.defColor});}artsDispatch({type:\"ADD_ROW\",data:row});};var onDelRow=function onDelRow(e){settingsDispatch({type:\"DEL_ROW\"});artsDispatch({type:\"DEL_ROW\"});};var onAddCol=function onAddCol(e){settingsDispatch({type:\"ADD_COL\"});artsDispatch({type:\"ADD_COL\",data:{x:settings.columnSize,color:settings.defColor}});};var onDelCol=function onDelCol(e){settingsDispatch({type:\"DEL_COL\"});artsDispatch({type:\"DEL_COL\"});};var resetHandler=function resetHandler(e){var artRows=createArt(settings);artsDispatch({type:\"UPD_ART\",artId:arts.chosen,data:{rows:artRows,id:arts.chosen}});};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(PreviewAnimation,{duration:0}),/*#__PURE__*/_jsx(SizeToggle,{cur:settings.rowSize,img:\"\\u2195\",add:onAddRow,del:onDelRow}),/*#__PURE__*/_jsx(SizeToggle,{cur:settings.columnSize,img:\"\\u2194\",add:onAddCol,del:onDelCol}),/*#__PURE__*/_jsx(Reset,{clicked:resetHandler})]});};export default SettingsBar;","map":{"version":3,"sources":["C:/Users/Pechenka/pixel-app-ts/src/components/SettingsBar/SettingsBar.tsx"],"names":["useContext","useState","SettingsContext","ArtsContext","SizeToggle","Reset","PreviewAnimation","createArt","SettingsBar","duration","setDuration","settings","settingsDispatch","arts","artsDispatch","onAddRow","e","type","row","i","columnSize","push","xpos","ypos","rowSize","color","defColor","data","onDelRow","onAddCol","x","onDelCol","resetHandler","artRows","artId","chosen","rows","id"],"mappings":"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","sourcesContent":["import { MouseEventHandler, useContext, useState } from \"react\";\r\nimport { SettingsContext } from \"../../context/settings-context\";\r\nimport { ArtsContext } from \"../../context/arts-context\";\r\n\r\nimport SizeToggle from \"./SizeToggle/SizeToggle\";\r\nimport Reset from \"./Reset/Reset\";\r\nimport PreviewAnimation from \"./PreviewAnimation/PreviewAnimation\";\r\nimport createArt from \"../../hoc/createArt\";\r\n\r\nconst SettingsBar = () => {\r\n  const [duration, setDuration] = useState(1);\r\n  const { settings, settingsDispatch } = useContext(SettingsContext);\r\n  const { arts, artsDispatch } = useContext(ArtsContext)!;\r\n\r\n  const onAddRow: MouseEventHandler = (e) => {\r\n    settingsDispatch!({ type: \"ADD_ROW\" });\r\n    const row = [];\r\n    for (let i = 0; i < settings!.columnSize; i++) {\r\n      row.push({\r\n        xpos: i,\r\n        ypos: settings!.rowSize,\r\n        color: settings!.defColor,\r\n      });\r\n    }\r\n    artsDispatch({ type: \"ADD_ROW\", data: row });\r\n  };\r\n\r\n  const onDelRow: MouseEventHandler = (e) => {\r\n    settingsDispatch!({ type: \"DEL_ROW\" });\r\n    artsDispatch({ type: \"DEL_ROW\" });\r\n  };\r\n\r\n  const onAddCol: MouseEventHandler = (e) => {\r\n    settingsDispatch!({ type: \"ADD_COL\" });\r\n    artsDispatch({\r\n      type: \"ADD_COL\",\r\n      data: { x: settings!.columnSize, color: settings!.defColor },\r\n    });\r\n  };\r\n\r\n  const onDelCol: MouseEventHandler = (e) => {\r\n    settingsDispatch!({ type: \"DEL_COL\" });\r\n    artsDispatch({ type: \"DEL_COL\" });\r\n  };\r\n\r\n  const resetHandler: MouseEventHandler = (e) => {\r\n    const artRows = createArt(settings!);\r\n    artsDispatch({\r\n      type: \"UPD_ART\",\r\n      artId: arts.chosen!,\r\n      data: { rows: artRows, id: arts!.chosen },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <PreviewAnimation duration={0} />\r\n      <SizeToggle\r\n        cur={settings!.rowSize}\r\n        img=\"&#8597;\"\r\n        add={onAddRow}\r\n        del={onDelRow}\r\n      />\r\n      <SizeToggle\r\n        cur={settings!.columnSize}\r\n        img=\"&#8596;\"\r\n        add={onAddCol}\r\n        del={onDelCol}\r\n      />\r\n      <Reset clicked={resetHandler} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SettingsBar;\r\n"]},"metadata":{},"sourceType":"module"}