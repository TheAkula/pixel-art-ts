{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pechenka\\\\pixel-app-ts\\\\src\\\\context\\\\settings-context.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  defColor: \"#000\",\n  rowSize: 16,\n  columnSize: 16,\n  color: \"#000\",\n  tool: null\n};\nexport const SettingsContext = /*#__PURE__*/React.createContext({\n  settings: null,\n  settingsDispatch: null\n});\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"ADD_ROW\":\n      return { ...state,\n        rowSize: state.rowSize + 1\n      };\n\n    case \"DEL_ROW\":\n      return { ...state,\n        rowSize: state.rowSize - 1 || 1\n      };\n\n    case \"ADD_COL\":\n      return { ...state,\n        columnSize: state.columnSize + 1\n      };\n\n    case \"DEL_COL\":\n      return { ...state,\n        columnSize: state.columnSize - 1 || 1\n      };\n\n    case \"SET_TOOL\":\n      return { ...state,\n        tool: action.data\n      };\n\n    case \"SET_COLOR\":\n      return { ...state,\n        color: action.data\n      };\n\n    default:\n      throw new Error(`Uncaught type: ${action.type}`);\n  }\n};\n\nconst SettingsContextProvider = props => {\n  _s();\n\n  const [state, dispatch] = useReducer(reducer, initialState);\n  return /*#__PURE__*/_jsxDEV(SettingsContext.Provider, {\n    value: {\n      settings: state,\n      settingsDispatch: dispatch\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SettingsContextProvider, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = SettingsContextProvider;\nexport default SettingsContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"SettingsContextProvider\");","map":{"version":3,"sources":["C:/Users/Pechenka/pixel-app-ts/src/context/settings-context.tsx"],"names":["React","useReducer","initialState","defColor","rowSize","columnSize","color","tool","SettingsContext","createContext","settings","settingsDispatch","reducer","state","action","type","data","Error","SettingsContextProvider","props","dispatch","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;;AAgBA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,QAAQ,EAAE,MADS;AAEnBC,EAAAA,OAAO,EAAE,EAFU;AAGnBC,EAAAA,UAAU,EAAE,EAHO;AAInBC,EAAAA,KAAK,EAAE,MAJY;AAKnBC,EAAAA,IAAI,EAAE;AALa,CAArB;AAQA,OAAO,MAAMC,eAAe,gBAAGR,KAAK,CAACS,aAAN,CAAmC;AAChEC,EAAAA,QAAQ,EAAE,IADsD;AAEhEC,EAAAA,gBAAgB,EAAE;AAF8C,CAAnC,CAAxB;;AASP,MAAMC,OAAwB,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAClD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,SAAL;AACE,aAAO,EACL,GAAGF,KADE;AAELT,QAAAA,OAAO,EAAES,KAAK,CAACT,OAAN,GAAgB;AAFpB,OAAP;;AAIF,SAAK,SAAL;AACE,aAAO,EACL,GAAGS,KADE;AAELT,QAAAA,OAAO,EAAES,KAAK,CAACT,OAAN,GAAgB,CAAhB,IAAqB;AAFzB,OAAP;;AAIF,SAAK,SAAL;AACE,aAAO,EACL,GAAGS,KADE;AAELR,QAAAA,UAAU,EAAEQ,KAAK,CAACR,UAAN,GAAmB;AAF1B,OAAP;;AAIF,SAAK,SAAL;AACE,aAAO,EACL,GAAGQ,KADE;AAELR,QAAAA,UAAU,EAAEQ,KAAK,CAACR,UAAN,GAAmB,CAAnB,IAAwB;AAF/B,OAAP;;AAIF,SAAK,UAAL;AACE,aAAO,EACL,GAAGQ,KADE;AAELN,QAAAA,IAAI,EAAEO,MAAM,CAACE;AAFR,OAAP;;AAIF,SAAK,WAAL;AACE,aAAO,EACL,GAAGH,KADE;AAELP,QAAAA,KAAK,EAAEQ,MAAM,CAACE;AAFT,OAAP;;AAIF;AACE,YAAM,IAAIC,KAAJ,CAAW,kBAAiBH,MAAM,CAACC,IAAK,EAAxC,CAAN;AAhCJ;AAkCD,CAnCD;;AA0CA,MAAMG,uBAAuB,GAAIC,KAAD,IAAgB;AAAA;;AAC9C,QAAM,CAACN,KAAD,EAAQO,QAAR,IAAoBnB,UAAU,CAACW,OAAD,EAAUV,YAAV,CAApC;AAEA,sBACE,QAAC,eAAD,CAAiB,QAAjB;AACE,IAAA,KAAK,EAAE;AAAEQ,MAAAA,QAAQ,EAAEG,KAAZ;AAAmBF,MAAAA,gBAAgB,EAAES;AAArC,KADT;AAAA,cAGGD,KAAK,CAACE;AAHT;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CAVD;;GAAMH,uB;;KAAAA,uB;AAYN,eAAeA,uBAAf","sourcesContent":["import React, { useReducer } from \"react\";\r\n\r\ninterface SettingsReducerState {\r\n  defColor: string;\r\n  rowSize: number;\r\n  columnSize: number;\r\n  color: string;\r\n  tool: \"BRUSH\" | \"FILL\" | \"ERASER\" | \"PIPETTE\" | null;\r\n}\r\n\r\ninterface SettingsReducerAction {\r\n  type: string;\r\n  data?: any;\r\n  rId?: string;\r\n}\r\n\r\nconst initialState = {\r\n  defColor: \"#000\",\r\n  rowSize: 16,\r\n  columnSize: 16,\r\n  color: \"#000\",\r\n  tool: null,\r\n};\r\n\r\nexport const SettingsContext = React.createContext<ProviderValue>({\r\n  settings: null,\r\n  settingsDispatch: null,\r\n});\r\n\r\ninterface SettingsReducer {\r\n  (a: SettingsReducerState, b: SettingsReducerAction): SettingsReducerState;\r\n}\r\n\r\nconst reducer: SettingsReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"ADD_ROW\":\r\n      return {\r\n        ...state,\r\n        rowSize: state.rowSize + 1,\r\n      };\r\n    case \"DEL_ROW\":\r\n      return {\r\n        ...state,\r\n        rowSize: state.rowSize - 1 || 1,\r\n      };\r\n    case \"ADD_COL\":\r\n      return {\r\n        ...state,\r\n        columnSize: state.columnSize + 1,\r\n      };\r\n    case \"DEL_COL\":\r\n      return {\r\n        ...state,\r\n        columnSize: state.columnSize - 1 || 1,\r\n      };\r\n    case \"SET_TOOL\":\r\n      return {\r\n        ...state,\r\n        tool: action.data,\r\n      };\r\n    case \"SET_COLOR\":\r\n      return {\r\n        ...state,\r\n        color: action.data,\r\n      };\r\n    default:\r\n      throw new Error(`Uncaught type: ${action.type}`);\r\n  }\r\n};\r\n\r\ninterface ProviderValue {\r\n  settings: SettingsReducerState | null;\r\n  settingsDispatch: React.Dispatch<SettingsReducerAction> | null;\r\n}\r\n\r\nconst SettingsContextProvider = (props: any) => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n  return (\r\n    <SettingsContext.Provider\r\n      value={{ settings: state, settingsDispatch: dispatch }}\r\n    >\r\n      {props.children}\r\n    </SettingsContext.Provider>\r\n  );\r\n};\r\n\r\nexport default SettingsContextProvider;\r\n"]},"metadata":{},"sourceType":"module"}