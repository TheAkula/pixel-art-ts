{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pechenka\\\\pixel-app-ts\\\\client\\\\src\\\\components\\\\UploadImage\\\\UploadImage.tsx\",\n    _s = $RefreshSig$();\n\nimport { useContext, useRef, useState } from \"react\";\nimport axios from \"axios\";\nimport { ArtsContext } from \"../../context/arts-context\";\nimport Button from \"../UI/Button/Button\";\nimport Modal from \"../UI/Modal/Modal\";\nimport classes from \"./UploadImage.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst UploadImage = () => {\n  _s();\n\n  const {\n    artsState,\n    artsDispatch\n  } = useContext(ArtsContext);\n  const [showModal, setShowModal] = useState(false);\n  const [isSelected, setIsSelected] = useState(false);\n  const fileInpRef = useRef(null);\n  const [haveFile, setHaveFile] = useState(false);\n\n  const onSubmitHandler = e => {\n    e.preventDefault();\n    const formData = new FormData(e.target);\n    axios({\n      method: \"post\",\n      url: \"/upl-img\",\n      data: formData,\n      headers: {\n        \"Content-Type\": \"multipart/form-data\"\n      }\n    }).then(data => {\n      onCloseModal();\n      artsDispatch({\n        type: \"ADD_ART\",\n        data: {\n          id: artsState.arts.length,\n          rows: data.data\n        }\n      });\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const onShowModal = () => {\n    setShowModal(true);\n  };\n\n  const onCloseModal = () => {\n    setShowModal(false);\n    setIsSelected(false);\n    setHaveFile(false);\n  };\n\n  const onBrowseImg = () => {\n    setHaveFile(false);\n    fileInpRef.current.click();\n    setIsSelected(true);\n  };\n\n  const onChosedFile = () => {\n    setHaveFile(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      type: \"button\",\n      clicked: onShowModal,\n      children: \"LOAD\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), showModal && /*#__PURE__*/_jsxDEV(Modal, {\n      closed: onCloseModal,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onBrowseImg,\n        children: \"BROWSE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        action: \"/upl-img\",\n        method: \"post\",\n        encType: \"multipart/form-data\",\n        onSubmit: onSubmitHandler,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: onChosedFile,\n          type: \"file\",\n          name: \"img\",\n          style: {\n            display: \"none\"\n          },\n          ref: fileInpRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this), isSelected && haveFile ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.ImgContainer,\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: window.URL.createObjectURL(fileInpRef.current.files[0]),\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"hidden\",\n            value: artsState.settings.pixelSize,\n            name: \"ps\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"hidden\",\n            value: artsState.settings.defColor,\n            name: \"dc\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: classes.UploadButton,\n            children: \"UPLOAD\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(UploadImage, \"P1mjTsrld0wRQl91S5fmd9KZWiA=\");\n\n_c = UploadImage;\nexport default UploadImage;\n\nvar _c;\n\n$RefreshReg$(_c, \"UploadImage\");","map":{"version":3,"sources":["C:/Users/Pechenka/pixel-app-ts/client/src/components/UploadImage/UploadImage.tsx"],"names":["useContext","useRef","useState","axios","ArtsContext","Button","Modal","classes","UploadImage","artsState","artsDispatch","showModal","setShowModal","isSelected","setIsSelected","fileInpRef","haveFile","setHaveFile","onSubmitHandler","e","preventDefault","formData","FormData","target","method","url","data","headers","then","onCloseModal","type","id","arts","length","rows","catch","err","console","log","onShowModal","onBrowseImg","current","click","onChosedFile","display","ImgContainer","window","URL","createObjectURL","files","settings","pixelSize","defColor","UploadButton"],"mappings":"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","sourcesContent":["import { FormEventHandler, useContext, useRef, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nimport { ArtsContext } from \"../../context/arts-context\";\r\nimport Button from \"../UI/Button/Button\";\r\nimport Modal from \"../UI/Modal/Modal\";\r\nimport classes from \"./UploadImage.module.css\";\r\n\r\nconst UploadImage = () => {\r\n  const { artsState, artsDispatch } = useContext(ArtsContext)!;\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [isSelected, setIsSelected] = useState(false);\r\n  const fileInpRef = useRef<null | HTMLInputElement>(null);\r\n  const [haveFile, setHaveFile] = useState(false);\r\n\r\n  const onSubmitHandler: FormEventHandler = (e) => {\r\n    e.preventDefault();\r\n    const formData = new FormData(e.target as HTMLFormElement);\r\n    axios({\r\n      method: \"post\",\r\n      url: \"/upl-img\",\r\n      data: formData,\r\n      headers: { \"Content-Type\": \"multipart/form-data\" },\r\n    })\r\n      .then((data) => {\r\n        onCloseModal();\r\n        artsDispatch({\r\n          type: \"ADD_ART\",\r\n          data: { id: artsState.arts.length, rows: data.data },\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const onShowModal = () => {\r\n    setShowModal(true);\r\n  };\r\n\r\n  const onCloseModal = () => {\r\n    setShowModal(false);\r\n    setIsSelected(false);\r\n    setHaveFile(false);\r\n  };\r\n\r\n  const onBrowseImg = () => {\r\n    setHaveFile(false);\r\n    fileInpRef.current!.click();\r\n    setIsSelected(true);\r\n  };\r\n\r\n  const onChosedFile = () => {\r\n    setHaveFile(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button type=\"button\" clicked={onShowModal}>\r\n        LOAD\r\n      </Button>\r\n      {showModal && (\r\n        <Modal closed={onCloseModal}>\r\n          <button onClick={onBrowseImg}>BROWSE</button>\r\n\r\n          <form\r\n            action=\"/upl-img\"\r\n            method=\"post\"\r\n            encType=\"multipart/form-data\"\r\n            onSubmit={onSubmitHandler}\r\n          >\r\n            <input\r\n              onChange={onChosedFile}\r\n              type=\"file\"\r\n              name=\"img\"\r\n              style={{ display: \"none\" }}\r\n              ref={fileInpRef}\r\n            />\r\n            {isSelected && haveFile ? (\r\n              <>\r\n                <div className={classes.ImgContainer}>\r\n                  <img\r\n                    src={window.URL.createObjectURL(\r\n                      fileInpRef.current!.files![0]\r\n                    )}\r\n                    alt=\"\"\r\n                  />\r\n                </div>\r\n\r\n                <input\r\n                  type=\"hidden\"\r\n                  value={artsState.settings.pixelSize}\r\n                  name=\"ps\"\r\n                />\r\n                <input\r\n                  type=\"hidden\"\r\n                  value={artsState.settings.defColor}\r\n                  name=\"dc\"\r\n                />\r\n                <button type=\"submit\" className={classes.UploadButton}>\r\n                  UPLOAD\r\n                </button>\r\n              </>\r\n            ) : null}\r\n          </form>\r\n        </Modal>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UploadImage;\r\n"]},"metadata":{},"sourceType":"module"}