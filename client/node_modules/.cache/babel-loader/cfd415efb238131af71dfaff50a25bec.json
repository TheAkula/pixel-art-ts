{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pechenka\\\\pixel-app-ts\\\\src\\\\components\\\\SettingsBar\\\\SettingsBar.tsx\",\n    _s = $RefreshSig$();\n\nimport { useContext } from \"react\";\nimport { SettingsContext } from \"../../context/settings-context\";\nimport { ArtsContext } from \"../../context/arts-context\";\nimport SizeToggle from \"./SizeToggle/SizeToggle\";\nimport Reset from \"./Reset/Reset\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst board = document.getElementById(\"board\");\n\nconst SettingsBar = () => {\n  _s();\n\n  const {\n    settings,\n    settingsDispatch\n  } = useContext(SettingsContext);\n  const {\n    arts,\n    artsDispatch\n  } = useContext(ArtsContext);\n\n  const onAddRow = e => {\n    settingsDispatch({\n      type: \"ADD_ROW\"\n    }); // const row = [];\n    // for (let i = 0; i < settings!.columnSize; i++) {\n    //   const newPix = document.createElement('button');\n    //   newPix.className = pixelClasses.Pixel;\n    //   newPix.id = settings!.rowSize + '-' + settings!.rowSize * settings!.columnSize + i;\n    //   row.append()\n    // }\n    // const row = [];\n    // for (let i = 0; i < settings!.columnSize; i++) {\n    //   row.push({\n    //     xpos: i,\n    //     ypos: settings!.rowSize,\n    //     color: settings!.defColor,\n    //   });\n    // }\n    // artsDispatch({ type: \"ADD_ROW\", data: row });\n  };\n\n  const onDelRow = e => {\n    settingsDispatch({\n      type: \"DEL_ROW\"\n    }); // artsDispatch({ type: \"DEL_ROW\" });\n  };\n\n  const onAddCol = e => {\n    settingsDispatch({\n      type: \"ADD_COL\"\n    }); // artsDispatch({\n    //   type: \"ADD_COL\",\n    //   data: { x: settings!.columnSize, color: settings!.defColor },\n    // });\n  };\n\n  const onDelCol = e => {\n    settingsDispatch({\n      type: \"DEL_COL\"\n    }); // artsDispatch({ type: \"DEL_COL\" });\n  };\n\n  const resetHandler = e => {\n    artsDispatch({\n      type: \"SET_CHOSEN\",\n      data: null\n    }); // artsDispatch({ type: \"UPD_ART\", artId: arts.chosen!, data: [] });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(SizeToggle, {\n      cur: settings.rowSize,\n      img: \"\\u2195\",\n      add: onAddRow,\n      del: onDelRow\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SizeToggle, {\n      cur: settings.columnSize,\n      img: \"\\u2194\",\n      add: onAddCol,\n      del: onDelCol\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Reset, {\n      clicked: resetHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SettingsBar, \"FzHg7maCDE2Zi/PluTmNPmXSeTY=\");\n\n_c = SettingsBar;\nexport default SettingsBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"SettingsBar\");","map":{"version":3,"sources":["C:/Users/Pechenka/pixel-app-ts/src/components/SettingsBar/SettingsBar.tsx"],"names":["useContext","SettingsContext","ArtsContext","SizeToggle","Reset","board","document","getElementById","SettingsBar","settings","settingsDispatch","arts","artsDispatch","onAddRow","e","type","onDelRow","onAddCol","onDelCol","resetHandler","data","rowSize","columnSize"],"mappings":";;;AAAA,SAA4BA,UAA5B,QAA8C,OAA9C;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,WAAT,QAA4B,4BAA5B;AAEA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,KAAP,MAAkB,eAAlB;;AAIA,MAAMC,KAAK,GAAGC,QAAQ,CAACC,cAAT,CAAwB,OAAxB,CAAd;;AAEA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACxB,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAAiCV,UAAU,CAACC,eAAD,CAAjD;AACA,QAAM;AAAEU,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAyBZ,UAAU,CAACE,WAAD,CAAzC;;AAEA,QAAMW,QAA2B,GAAIC,CAAD,IAAO;AACzCJ,IAAAA,gBAAgB,CAAE;AAAEK,MAAAA,IAAI,EAAE;AAAR,KAAF,CAAhB,CADyC,CAEzC;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,GAnBD;;AAqBA,QAAMC,QAA2B,GAAIF,CAAD,IAAO;AACzCJ,IAAAA,gBAAgB,CAAE;AAAEK,MAAAA,IAAI,EAAE;AAAR,KAAF,CAAhB,CADyC,CAEzC;AACD,GAHD;;AAKA,QAAME,QAA2B,GAAIH,CAAD,IAAO;AACzCJ,IAAAA,gBAAgB,CAAE;AAAEK,MAAAA,IAAI,EAAE;AAAR,KAAF,CAAhB,CADyC,CAEzC;AACA;AACA;AACA;AACD,GAND;;AAQA,QAAMG,QAA2B,GAAIJ,CAAD,IAAO;AACzCJ,IAAAA,gBAAgB,CAAE;AAAEK,MAAAA,IAAI,EAAE;AAAR,KAAF,CAAhB,CADyC,CAEzC;AACD,GAHD;;AAKA,QAAMI,YAA+B,GAAIL,CAAD,IAAO;AAC7CF,IAAAA,YAAY,CAAC;AAAEG,MAAAA,IAAI,EAAE,YAAR;AAAsBK,MAAAA,IAAI,EAAE;AAA5B,KAAD,CAAZ,CAD6C,CAE7C;AACD,GAHD;;AAKA,sBACE;AAAA,4BACE,QAAC,UAAD;AACE,MAAA,GAAG,EAAEX,QAAQ,CAAEY,OADjB;AAEE,MAAA,GAAG,EAAC,QAFN;AAGE,MAAA,GAAG,EAAER,QAHP;AAIE,MAAA,GAAG,EAAEG;AAJP;AAAA;AAAA;AAAA;AAAA,YADF,eAOE,QAAC,UAAD;AACE,MAAA,GAAG,EAAEP,QAAQ,CAAEa,UADjB;AAEE,MAAA,GAAG,EAAC,QAFN;AAGE,MAAA,GAAG,EAAEL,QAHP;AAIE,MAAA,GAAG,EAAEC;AAJP;AAAA;AAAA;AAAA;AAAA,YAPF,eAaE,QAAC,KAAD;AAAO,MAAA,OAAO,EAAEC;AAAhB;AAAA;AAAA;AAAA;AAAA,YAbF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD,CAjED;;GAAMX,W;;KAAAA,W;AAmEN,eAAeA,WAAf","sourcesContent":["import { MouseEventHandler, useContext } from \"react\";\r\nimport { SettingsContext } from \"../../context/settings-context\";\r\nimport { ArtsContext } from \"../../context/arts-context\";\r\n\r\nimport SizeToggle from \"./SizeToggle/SizeToggle\";\r\nimport Reset from \"./Reset/Reset\";\r\n\r\nimport pixelClasses from \"../Board/Pixel/Pixlel.module.css\";\r\n\r\nconst board = document.getElementById(\"board\");\r\n\r\nconst SettingsBar = () => {\r\n  const { settings, settingsDispatch } = useContext(SettingsContext);\r\n  const { arts, artsDispatch } = useContext(ArtsContext)!;\r\n\r\n  const onAddRow: MouseEventHandler = (e) => {\r\n    settingsDispatch!({ type: \"ADD_ROW\" });\r\n    // const row = [];\r\n    // for (let i = 0; i < settings!.columnSize; i++) {\r\n    //   const newPix = document.createElement('button');\r\n    //   newPix.className = pixelClasses.Pixel;\r\n    //   newPix.id = settings!.rowSize + '-' + settings!.rowSize * settings!.columnSize + i;\r\n    //   row.append()\r\n    // }\r\n\r\n    // const row = [];\r\n    // for (let i = 0; i < settings!.columnSize; i++) {\r\n    //   row.push({\r\n    //     xpos: i,\r\n    //     ypos: settings!.rowSize,\r\n    //     color: settings!.defColor,\r\n    //   });\r\n    // }\r\n    // artsDispatch({ type: \"ADD_ROW\", data: row });\r\n  };\r\n\r\n  const onDelRow: MouseEventHandler = (e) => {\r\n    settingsDispatch!({ type: \"DEL_ROW\" });\r\n    // artsDispatch({ type: \"DEL_ROW\" });\r\n  };\r\n\r\n  const onAddCol: MouseEventHandler = (e) => {\r\n    settingsDispatch!({ type: \"ADD_COL\" });\r\n    // artsDispatch({\r\n    //   type: \"ADD_COL\",\r\n    //   data: { x: settings!.columnSize, color: settings!.defColor },\r\n    // });\r\n  };\r\n\r\n  const onDelCol: MouseEventHandler = (e) => {\r\n    settingsDispatch!({ type: \"DEL_COL\" });\r\n    // artsDispatch({ type: \"DEL_COL\" });\r\n  };\r\n\r\n  const resetHandler: MouseEventHandler = (e) => {\r\n    artsDispatch({ type: \"SET_CHOSEN\", data: null });\r\n    // artsDispatch({ type: \"UPD_ART\", artId: arts.chosen!, data: [] });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <SizeToggle\r\n        cur={settings!.rowSize}\r\n        img=\"&#8597;\"\r\n        add={onAddRow}\r\n        del={onDelRow}\r\n      />\r\n      <SizeToggle\r\n        cur={settings!.columnSize}\r\n        img=\"&#8596;\"\r\n        add={onAddCol}\r\n        del={onDelCol}\r\n      />\r\n      <Reset clicked={resetHandler} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SettingsBar;\r\n"]},"metadata":{},"sourceType":"module"}