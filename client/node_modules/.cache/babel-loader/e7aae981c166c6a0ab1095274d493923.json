{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pechenka\\\\pixel-app-ts\\\\client\\\\src\\\\components\\\\SettingsBar\\\\SettingsBar.tsx\",\n    _s = $RefreshSig$();\n\nimport { useContext, useState } from \"react\";\nimport { ArtsContext } from \"../../context/arts-context\";\nimport SizeToggle from \"./SizeToggle/SizeToggle\";\nimport Reset from \"./Reset/Reset\";\nimport PreviewAnimation from \"./PreviewAnimation/PreviewAnimation\";\nimport createArt from \"../../hoc/createArt\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SettingsBar = () => {\n  _s();\n\n  const [duration, setDuration] = useState(1);\n  const {\n    artsState,\n    artsDispatch\n  } = useContext(ArtsContext);\n\n  const onAddRow = e => {\n    const row = [];\n\n    for (let i = 0; i < artsState.settings.columnSize; i++) {\n      row.push({\n        xpos: i,\n        ypos: artsState.settings.rowSize,\n        color: artsState.settings.defColor\n      });\n    }\n\n    artsDispatch({\n      type: \"ADD_ROW\",\n      data: row\n    });\n  };\n\n  const onDelRow = e => {\n    artsDispatch({\n      type: \"DEL_ROW\"\n    });\n  };\n\n  const onAddCol = e => {\n    artsDispatch({\n      type: \"ADD_COL\",\n      data: {\n        x: artsState.settings.columnSize,\n        color: artsState.settings.defColor\n      }\n    });\n  };\n\n  const onDelCol = e => {\n    artsDispatch({\n      type: \"DEL_COL\"\n    });\n  };\n\n  const resetHandler = () => {\n    const artRows = createArt(artsState.settings);\n    artsDispatch({\n      type: \"UPD_ART\",\n      artId: artsState.chosen,\n      data: {\n        rows: artRows,\n        id: artsState.chosen\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(PreviewAnimation, {\n      duration: 0\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SizeToggle, {\n      cur: artsState.settings.rowSize,\n      img: \"\\u2195\",\n      add: onAddRow,\n      del: onDelRow\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SizeToggle, {\n      cur: artsState.settings.columnSize,\n      img: \"\\u2194\",\n      add: onAddCol,\n      del: onDelCol\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Reset, {\n      clicked: resetHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SettingsBar, \"Y55DTj39hqOGn9oFxqoPdii4rug=\");\n\n_c = SettingsBar;\nexport default SettingsBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"SettingsBar\");","map":{"version":3,"sources":["C:/Users/Pechenka/pixel-app-ts/client/src/components/SettingsBar/SettingsBar.tsx"],"names":["useContext","useState","ArtsContext","SizeToggle","Reset","PreviewAnimation","createArt","SettingsBar","duration","setDuration","artsState","artsDispatch","onAddRow","e","row","i","settings","columnSize","push","xpos","ypos","rowSize","color","defColor","type","data","onDelRow","onAddCol","x","onDelCol","resetHandler","artRows","artId","chosen","rows","id"],"mappings":";;;AAAA,SAA4BA,UAA5B,EAAwCC,QAAxC,QAAwD,OAAxD;AACA,SAASC,WAAT,QAA4B,4BAA5B;AAEA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,OAAOC,gBAAP,MAA6B,qCAA7B;AACA,OAAOC,SAAP,MAAsB,qBAAtB;;;AAEA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACxB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,CAAD,CAAxC;AACA,QAAM;AAAES,IAAAA,SAAF;AAAaC,IAAAA;AAAb,MAA8BX,UAAU,CAACE,WAAD,CAA9C;;AAEA,QAAMU,QAA2B,GAAIC,CAAD,IAAO;AACzC,UAAMC,GAAG,GAAG,EAAZ;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,SAAS,CAACM,QAAV,CAAoBC,UAAxC,EAAoDF,CAAC,EAArD,EAAyD;AACvDD,MAAAA,GAAG,CAACI,IAAJ,CAAS;AACPC,QAAAA,IAAI,EAAEJ,CADC;AAEPK,QAAAA,IAAI,EAAEV,SAAS,CAACM,QAAV,CAAoBK,OAFnB;AAGPC,QAAAA,KAAK,EAAEZ,SAAS,CAACM,QAAV,CAAoBO;AAHpB,OAAT;AAKD;;AACDZ,IAAAA,YAAY,CAAC;AAAEa,MAAAA,IAAI,EAAE,SAAR;AAAmBC,MAAAA,IAAI,EAAEX;AAAzB,KAAD,CAAZ;AACD,GAVD;;AAYA,QAAMY,QAA2B,GAAIb,CAAD,IAAO;AACzCF,IAAAA,YAAY,CAAC;AAAEa,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAZ;AACD,GAFD;;AAIA,QAAMG,QAA2B,GAAId,CAAD,IAAO;AACzCF,IAAAA,YAAY,CAAC;AACXa,MAAAA,IAAI,EAAE,SADK;AAEXC,MAAAA,IAAI,EAAE;AACJG,QAAAA,CAAC,EAAElB,SAAS,CAACM,QAAV,CAAoBC,UADnB;AAEJK,QAAAA,KAAK,EAAEZ,SAAS,CAACM,QAAV,CAAoBO;AAFvB;AAFK,KAAD,CAAZ;AAOD,GARD;;AAUA,QAAMM,QAA2B,GAAIhB,CAAD,IAAO;AACzCF,IAAAA,YAAY,CAAC;AAAEa,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAZ;AACD,GAFD;;AAIA,QAAMM,YAAY,GAAG,MAAM;AACzB,UAAMC,OAAO,GAAGzB,SAAS,CAACI,SAAS,CAACM,QAAX,CAAzB;AACAL,IAAAA,YAAY,CAAC;AACXa,MAAAA,IAAI,EAAE,SADK;AAEXQ,MAAAA,KAAK,EAAEtB,SAAS,CAACuB,MAFN;AAGXR,MAAAA,IAAI,EAAE;AAAES,QAAAA,IAAI,EAAEH,OAAR;AAAiBI,QAAAA,EAAE,EAAEzB,SAAS,CAAEuB;AAAhC;AAHK,KAAD,CAAZ;AAKD,GAPD;;AASA,sBACE;AAAA,4BACE,QAAC,gBAAD;AAAkB,MAAA,QAAQ,EAAE;AAA5B;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,UAAD;AACE,MAAA,GAAG,EAAEvB,SAAS,CAACM,QAAV,CAAoBK,OAD3B;AAEE,MAAA,GAAG,EAAC,QAFN;AAGE,MAAA,GAAG,EAAET,QAHP;AAIE,MAAA,GAAG,EAAEc;AAJP;AAAA;AAAA;AAAA;AAAA,YAFF,eAQE,QAAC,UAAD;AACE,MAAA,GAAG,EAAEhB,SAAS,CAACM,QAAV,CAAoBC,UAD3B;AAEE,MAAA,GAAG,EAAC,QAFN;AAGE,MAAA,GAAG,EAAEU,QAHP;AAIE,MAAA,GAAG,EAAEE;AAJP;AAAA;AAAA;AAAA;AAAA,YARF,eAcE,QAAC,KAAD;AAAO,MAAA,OAAO,EAAEC;AAAhB;AAAA;AAAA;AAAA;AAAA,YAdF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD,CA7DD;;GAAMvB,W;;KAAAA,W;AA+DN,eAAeA,WAAf","sourcesContent":["import { MouseEventHandler, useContext, useState } from \"react\";\r\nimport { ArtsContext } from \"../../context/arts-context\";\r\n\r\nimport SizeToggle from \"./SizeToggle/SizeToggle\";\r\nimport Reset from \"./Reset/Reset\";\r\nimport PreviewAnimation from \"./PreviewAnimation/PreviewAnimation\";\r\nimport createArt from \"../../hoc/createArt\";\r\n\r\nconst SettingsBar = () => {\r\n  const [duration, setDuration] = useState(1);\r\n  const { artsState, artsDispatch } = useContext(ArtsContext)!;\r\n\r\n  const onAddRow: MouseEventHandler = (e) => {\r\n    const row = [];\r\n    for (let i = 0; i < artsState.settings!.columnSize; i++) {\r\n      row.push({\r\n        xpos: i,\r\n        ypos: artsState.settings!.rowSize,\r\n        color: artsState.settings!.defColor,\r\n      });\r\n    }\r\n    artsDispatch({ type: \"ADD_ROW\", data: row });\r\n  };\r\n\r\n  const onDelRow: MouseEventHandler = (e) => {\r\n    artsDispatch({ type: \"DEL_ROW\" });\r\n  };\r\n\r\n  const onAddCol: MouseEventHandler = (e) => {\r\n    artsDispatch({\r\n      type: \"ADD_COL\",\r\n      data: {\r\n        x: artsState.settings!.columnSize,\r\n        color: artsState.settings!.defColor,\r\n      },\r\n    });\r\n  };\r\n\r\n  const onDelCol: MouseEventHandler = (e) => {\r\n    artsDispatch({ type: \"DEL_COL\" });\r\n  };\r\n\r\n  const resetHandler = () => {\r\n    const artRows = createArt(artsState.settings!);\r\n    artsDispatch({\r\n      type: \"UPD_ART\",\r\n      artId: artsState.chosen!,\r\n      data: { rows: artRows, id: artsState!.chosen },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <PreviewAnimation duration={0} />\r\n      <SizeToggle\r\n        cur={artsState.settings!.rowSize}\r\n        img=\"&#8597;\"\r\n        add={onAddRow}\r\n        del={onDelRow}\r\n      />\r\n      <SizeToggle\r\n        cur={artsState.settings!.columnSize}\r\n        img=\"&#8596;\"\r\n        add={onAddCol}\r\n        del={onDelCol}\r\n      />\r\n      <Reset clicked={resetHandler} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SettingsBar;\r\n"]},"metadata":{},"sourceType":"module"}