{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pechenka\\\\pixel-app-ts\\\\src\\\\context\\\\arts-context.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  arts: [],\n  chosen: null\n};\nexport const ArtsContext = /*#__PURE__*/React.createContext(null);\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"ADD_ART\":\n      return { ...state,\n        arts: state.arts.concat(action.data)\n      };\n\n    case \"ADD_ROW\":\n      const newArts = state.arts.map(art => {\n        const newArt = { ...art\n        };\n        newArt.rows.push(action.data);\n        return newArt;\n      });\n      return { ...state,\n        arts: newArts\n      };\n\n    case \"DEL_ROW\":\n      const arts = state.arts.map(art => {\n        const newArt = { ...art\n        };\n        newArt.rows.pop();\n        return newArt;\n      });\n      return { ...state,\n        arts: arts\n      };\n\n    case \"ADD_COL\":\n      const arts1 = state.arts.map(art => {\n        const newArt = { ...art\n        };\n        newArt.rows.forEach(row => {\n          row.push(action.data);\n        });\n        return newArt;\n      });\n      return { ...state,\n        arts: arts1\n      };\n\n    case \"DEL_COL\":\n      const arts2 = state.arts.map(art => {\n        const newArt = { ...art\n        };\n        newArt.rows.forEach(row => {\n          row.pop();\n        });\n        return newArt;\n      });\n      return { ...state,\n        arts: arts2\n      };\n\n    case \"SET_CHOSEN\":\n      return { ...state,\n        chosen: action.data\n      };\n\n    case \"SET_PIX\":\n      let arts3 = [...state.arts];\n      const a = arts3.find(art => art.id === action.artId);\n      arts3[arts3.indexOf(a)].rows[action.y][action.x].color = action.data;\n      return { ...state,\n        arts: arts3\n      };\n\n    default:\n      throw new Error(\"Uncaught type: \" + action.type);\n  }\n};\n\nconst ArtsContextProvider = props => {\n  _s();\n\n  const [state, dispatch] = useReducer(reducer, initialState);\n  return /*#__PURE__*/_jsxDEV(ArtsContext.Provider, {\n    value: {\n      arts: state,\n      artsDispatch: dispatch\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ArtsContextProvider, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = ArtsContextProvider;\nexport default ArtsContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ArtsContextProvider\");","map":{"version":3,"sources":["C:/Users/Pechenka/pixel-app-ts/src/context/arts-context.tsx"],"names":["React","useReducer","initialState","arts","chosen","ArtsContext","createContext","reducer","state","action","type","concat","data","newArts","map","art","newArt","rows","push","pop","arts1","forEach","row","arts2","arts3","a","find","id","artId","indexOf","y","x","color","Error","ArtsContextProvider","props","dispatch","artsDispatch","children"],"mappings":"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","sourcesContent":["import React, { useReducer } from \"react\";\r\n\r\ninterface Pixel {\r\n  xpos: number;\r\n  ypos: number;\r\n  color: string;\r\n}\r\n\r\nexport interface Art {\r\n  rows: Pixel[][];\r\n  id: string;\r\n}\r\n\r\ninterface ArtsReducerState {\r\n  arts: Art[];\r\n  chosen: string | null;\r\n}\r\n\r\ninterface ArtsReducerAction {\r\n  type: string;\r\n  data?: any;\r\n  artId?: string;\r\n  x?: number;\r\n  y?: number;\r\n}\r\n\r\ninterface ArtsProviderValue {\r\n  arts: ArtsReducerState;\r\n  artsDispatch: React.Dispatch<ArtsReducerAction>;\r\n}\r\n\r\nconst initialState: ArtsReducerState = {\r\n  arts: [],\r\n  chosen: null,\r\n};\r\n\r\nexport const ArtsContext = React.createContext<ArtsProviderValue | null>(null);\r\n\r\ninterface ArtsReducer {\r\n  (a: ArtsReducerState, b: ArtsReducerAction): ArtsReducerState;\r\n}\r\n\r\nconst reducer: ArtsReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"ADD_ART\":\r\n      return {\r\n        ...state,\r\n        arts: state.arts!.concat(action.data),\r\n      };\r\n    case \"ADD_ROW\":\r\n      const newArts = state.arts!.map((art) => {\r\n        const newArt = { ...art };\r\n        newArt.rows.push(action.data);\r\n        return newArt;\r\n      });\r\n      return {\r\n        ...state,\r\n        arts: newArts,\r\n      };\r\n    case \"DEL_ROW\":\r\n      const arts = state.arts!.map((art) => {\r\n        const newArt = { ...art };\r\n        newArt.rows.pop();\r\n        return newArt;\r\n      });\r\n      return {\r\n        ...state,\r\n        arts: arts,\r\n      };\r\n    case \"ADD_COL\":\r\n      const arts1 = state.arts!.map((art) => {\r\n        const newArt = { ...art };\r\n        newArt.rows.forEach((row) => {\r\n          row.push(action.data);\r\n        });\r\n        return newArt;\r\n      });\r\n      return {\r\n        ...state,\r\n        arts: arts1,\r\n      };\r\n    case \"DEL_COL\":\r\n      const arts2 = state.arts!.map((art) => {\r\n        const newArt = { ...art };\r\n        newArt.rows.forEach((row) => {\r\n          row.pop();\r\n        });\r\n        return newArt;\r\n      });\r\n      return {\r\n        ...state,\r\n        arts: arts2,\r\n      };\r\n    case \"SET_CHOSEN\":\r\n      return {\r\n        ...state,\r\n        chosen: action.data,\r\n      };\r\n    case \"SET_PIX\":\r\n      let arts3 = [...state.arts];\r\n      const a = arts3.find((art) => art.id === action.artId)!;\r\n      arts3[arts3.indexOf(a)].rows[action.y!][action.x!].color = action.data;\r\n      return {\r\n        ...state,\r\n        arts: arts3,\r\n      };\r\n    default:\r\n      throw new Error(\"Uncaught type: \" + action.type);\r\n  }\r\n};\r\n\r\nconst ArtsContextProvider = (props: any) => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n  return (\r\n    <ArtsContext.Provider value={{ arts: state, artsDispatch: dispatch }}>\r\n      {props.children}\r\n    </ArtsContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ArtsContextProvider;\r\n"]},"metadata":{},"sourceType":"module"}