{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pechenka\\\\pixel-app-ts\\\\src\\\\context\\\\arts-context.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  arts: [],\n  chosen: null\n};\nexport const ArtsContext = /*#__PURE__*/React.createContext(null);\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"ADD_ART\":\n      return { ...state,\n        arts: [...state.arts, action.data],\n        chosen: action.data.id\n      };\n\n    case \"ADD_ROW\":\n      const newArts = JSON.parse(JSON.stringify(state.arts));\n      newArts.forEach(art => {\n        art.rows.push(action.data);\n      });\n      return { ...state,\n        arts: newArts\n      };\n\n    case \"DEL_ROW\":\n      const arts = JSON.parse(JSON.stringify(state.arts));\n      if (arts[0].rows.length === 1) return { ...state,\n        arts: state.arts\n      };\n      arts.forEach(art => {\n        art.rows.pop();\n      });\n      return { ...state,\n        arts: arts\n      };\n\n    case \"ADD_COL\":\n      const arts1 = JSON.parse(JSON.stringify(state.arts));\n      arts1.forEach(art => {\n        art.rows.forEach((row, id) => {\n          row.push({\n            xpos: action.data.x,\n            ypos: id,\n            color: action.data.color\n          });\n        });\n      });\n      return { ...state,\n        arts: arts1\n      };\n\n    case \"DEL_COL\":\n      const arts2 = JSON.parse(JSON.stringify(state.arts));\n      if (arts2[0].rows[0].length === 1) return { ...state,\n        arts: state.arts\n      };\n      arts2.forEach(art => {\n        art.rows.forEach(row => {\n          row.pop();\n        });\n      });\n      return { ...state,\n        arts: arts2\n      };\n\n    case \"SET_CHOSEN\":\n      return { ...state,\n        chosen: action.data\n      };\n\n    case \"SET_PIX\":\n      let arts3 = JSON.parse(JSON.stringify(state.arts));\n      const a = arts3.find(art => art.id === action.artId);\n      arts3[arts3.indexOf(a)].rows[action.y][action.x].color = action.data;\n      return { ...state,\n        arts: arts3\n      };\n\n    case \"UPD_ART\":\n      const updatedArts = JSON.parse(JSON.stringify(state.arts));\n      let art = updatedArts.find(art => art.id === action.artId);\n      updatedArts[updatedArts.indexOf(art)] = action.data;\n      return {\n        arts: updatedArts,\n        chosen: state.chosen\n      };\n\n    default:\n      throw new Error(\"Uncaught type: \" + action.type);\n  }\n};\n\nconst ArtsContextProvider = props => {\n  _s();\n\n  const [state, dispatch] = useReducer(reducer, initialState);\n  return /*#__PURE__*/_jsxDEV(ArtsContext.Provider, {\n    value: {\n      arts: state,\n      artsDispatch: dispatch\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ArtsContextProvider, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = ArtsContextProvider;\nexport default ArtsContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ArtsContextProvider\");","map":{"version":3,"sources":["C:/Users/Pechenka/pixel-app-ts/src/context/arts-context.tsx"],"names":["React","useReducer","initialState","arts","chosen","ArtsContext","createContext","reducer","state","action","type","data","id","newArts","JSON","parse","stringify","forEach","art","rows","push","length","pop","arts1","row","xpos","x","ypos","color","arts2","arts3","a","find","artId","indexOf","y","updatedArts","Error","ArtsContextProvider","props","dispatch","artsDispatch","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;;AA+BA,MAAMC,YAA8B,GAAG;AACrCC,EAAAA,IAAI,EAAE,EAD+B;AAErCC,EAAAA,MAAM,EAAE;AAF6B,CAAvC;AAKA,OAAO,MAAMC,WAAW,gBAAGL,KAAK,CAACM,aAAN,CAA8C,IAA9C,CAApB;;AAMP,MAAMC,OAAoB,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC9C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,SAAL;AACE,aAAO,EACL,GAAGF,KADE;AAELL,QAAAA,IAAI,EAAE,CAAC,GAAGK,KAAK,CAACL,IAAV,EAAiBM,MAAM,CAACE,IAAxB,CAFD;AAGLP,QAAAA,MAAM,EAAEK,MAAM,CAACE,IAAP,CAAYC;AAHf,OAAP;;AAKF,SAAK,SAAL;AACE,YAAMC,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeR,KAAK,CAACL,IAArB,CAAX,CAAhB;AACAU,MAAAA,OAAO,CAACI,OAAR,CAAiBC,GAAD,IAAS;AACvBA,QAAAA,GAAG,CAACC,IAAJ,CAASC,IAAT,CAAcX,MAAM,CAACE,IAArB;AACD,OAFD;AAGA,aAAO,EACL,GAAGH,KADE;AAELL,QAAAA,IAAI,EAAEU;AAFD,OAAP;;AAIF,SAAK,SAAL;AACE,YAAMV,IAAI,GAAGW,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeR,KAAK,CAACL,IAArB,CAAX,CAAb;AACA,UAAIA,IAAI,CAAC,CAAD,CAAJ,CAAQgB,IAAR,CAAaE,MAAb,KAAwB,CAA5B,EAA+B,OAAO,EAAE,GAAGb,KAAL;AAAYL,QAAAA,IAAI,EAAEK,KAAK,CAACL;AAAxB,OAAP;AAC/BA,MAAAA,IAAI,CAACc,OAAL,CAAcC,GAAD,IAAS;AACpBA,QAAAA,GAAG,CAACC,IAAJ,CAASG,GAAT;AACD,OAFD;AAGA,aAAO,EACL,GAAGd,KADE;AAELL,QAAAA,IAAI,EAAEA;AAFD,OAAP;;AAIF,SAAK,SAAL;AACE,YAAMoB,KAAK,GAAGT,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeR,KAAK,CAACL,IAArB,CAAX,CAAd;AACAoB,MAAAA,KAAK,CAACN,OAAN,CAAeC,GAAD,IAAS;AACrBA,QAAAA,GAAG,CAACC,IAAJ,CAASF,OAAT,CAAiB,CAACO,GAAD,EAAMZ,EAAN,KAAa;AAC5BY,UAAAA,GAAG,CAACJ,IAAJ,CAAS;AAAEK,YAAAA,IAAI,EAAEhB,MAAM,CAACE,IAAP,CAAYe,CAApB;AAAuBC,YAAAA,IAAI,EAAEf,EAA7B;AAAiCgB,YAAAA,KAAK,EAAEnB,MAAM,CAACE,IAAP,CAAYiB;AAApD,WAAT;AACD,SAFD;AAGD,OAJD;AAKA,aAAO,EACL,GAAGpB,KADE;AAELL,QAAAA,IAAI,EAAEoB;AAFD,OAAP;;AAIF,SAAK,SAAL;AACE,YAAMM,KAAK,GAAGf,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeR,KAAK,CAACL,IAArB,CAAX,CAAd;AACA,UAAI0B,KAAK,CAAC,CAAD,CAAL,CAASV,IAAT,CAAc,CAAd,EAAiBE,MAAjB,KAA4B,CAAhC,EAAmC,OAAO,EAAE,GAAGb,KAAL;AAAYL,QAAAA,IAAI,EAAEK,KAAK,CAACL;AAAxB,OAAP;AACnC0B,MAAAA,KAAK,CAACZ,OAAN,CAAeC,GAAD,IAAS;AACrBA,QAAAA,GAAG,CAACC,IAAJ,CAASF,OAAT,CAAkBO,GAAD,IAAS;AACxBA,UAAAA,GAAG,CAACF,GAAJ;AACD,SAFD;AAGD,OAJD;AAKA,aAAO,EACL,GAAGd,KADE;AAELL,QAAAA,IAAI,EAAE0B;AAFD,OAAP;;AAIF,SAAK,YAAL;AACE,aAAO,EACL,GAAGrB,KADE;AAELJ,QAAAA,MAAM,EAAEK,MAAM,CAACE;AAFV,OAAP;;AAIF,SAAK,SAAL;AACE,UAAImB,KAAK,GAAGhB,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeR,KAAK,CAACL,IAArB,CAAX,CAAZ;AACA,YAAM4B,CAAC,GAAGD,KAAK,CAACE,IAAN,CAAYd,GAAD,IAASA,GAAG,CAACN,EAAJ,KAAWH,MAAM,CAACwB,KAAtC,CAAV;AACAH,MAAAA,KAAK,CAACA,KAAK,CAACI,OAAN,CAAcH,CAAd,CAAD,CAAL,CAAwBZ,IAAxB,CAA6BV,MAAM,CAAC0B,CAApC,EAAwC1B,MAAM,CAACiB,CAA/C,EAAmDE,KAAnD,GAA2DnB,MAAM,CAACE,IAAlE;AACA,aAAO,EACL,GAAGH,KADE;AAELL,QAAAA,IAAI,EAAE2B;AAFD,OAAP;;AAIF,SAAK,SAAL;AACE,YAAMM,WAAW,GAAGtB,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeR,KAAK,CAACL,IAArB,CAAX,CAApB;AACA,UAAIe,GAAG,GAAGkB,WAAW,CAACJ,IAAZ,CAAkBd,GAAD,IAASA,GAAG,CAACN,EAAJ,KAAWH,MAAM,CAACwB,KAA5C,CAAV;AACAG,MAAAA,WAAW,CAACA,WAAW,CAACF,OAAZ,CAAoBhB,GAApB,CAAD,CAAX,GAAwCT,MAAM,CAACE,IAA/C;AACA,aAAO;AACLR,QAAAA,IAAI,EAAEiC,WADD;AAELhC,QAAAA,MAAM,EAAEI,KAAK,CAACJ;AAFT,OAAP;;AAIF;AACE,YAAM,IAAIiC,KAAJ,CAAU,oBAAoB5B,MAAM,CAACC,IAArC,CAAN;AAvEJ;AAyED,CA1ED;;AA4EA,MAAM4B,mBAAmB,GAAIC,KAAD,IAAgB;AAAA;;AAC1C,QAAM,CAAC/B,KAAD,EAAQgC,QAAR,IAAoBvC,UAAU,CAACM,OAAD,EAAUL,YAAV,CAApC;AACA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAAEC,MAAAA,IAAI,EAAEK,KAAR;AAAeiC,MAAAA,YAAY,EAAED;AAA7B,KAA7B;AAAA,cACGD,KAAK,CAACG;AADT;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAPD;;GAAMJ,mB;;KAAAA,mB;AASN,eAAeA,mBAAf","sourcesContent":["import React, { useReducer } from \"react\";\r\n\r\nexport interface Pixel {\r\n  xpos: number;\r\n  ypos: number;\r\n  color: string;\r\n}\r\n\r\nexport interface Art {\r\n  rows: Pixel[][];\r\n  id: string;\r\n}\r\n\r\ninterface ArtsReducerState {\r\n  arts: Art[];\r\n  chosen: string | null;\r\n}\r\n\r\ninterface ArtsReducerAction {\r\n  type: string;\r\n  data?: any;\r\n  artId?: string;\r\n  x?: number;\r\n  y?: number;\r\n}\r\n\r\ninterface ArtsProviderValue {\r\n  arts: ArtsReducerState;\r\n  artsDispatch: React.Dispatch<ArtsReducerAction>;\r\n}\r\n\r\nconst initialState: ArtsReducerState = {\r\n  arts: [],\r\n  chosen: null,\r\n};\r\n\r\nexport const ArtsContext = React.createContext<ArtsProviderValue | null>(null);\r\n\r\ninterface ArtsReducer {\r\n  (a: ArtsReducerState, b: ArtsReducerAction): ArtsReducerState;\r\n}\r\n\r\nconst reducer: ArtsReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"ADD_ART\":\r\n      return {\r\n        ...state,\r\n        arts: [...state.arts!, action.data],\r\n        chosen: action.data.id,\r\n      };\r\n    case \"ADD_ROW\":\r\n      const newArts = JSON.parse(JSON.stringify(state.arts)) as Art[];\r\n      newArts.forEach((art) => {\r\n        art.rows.push(action.data);\r\n      });\r\n      return {\r\n        ...state,\r\n        arts: newArts,\r\n      };\r\n    case \"DEL_ROW\":\r\n      const arts = JSON.parse(JSON.stringify(state.arts)) as Art[];\r\n      if (arts[0].rows.length === 1) return { ...state, arts: state.arts };\r\n      arts.forEach((art) => {\r\n        art.rows.pop();\r\n      });\r\n      return {\r\n        ...state,\r\n        arts: arts,\r\n      };\r\n    case \"ADD_COL\":\r\n      const arts1 = JSON.parse(JSON.stringify(state.arts)) as Art[];\r\n      arts1.forEach((art) => {\r\n        art.rows.forEach((row, id) => {\r\n          row.push({ xpos: action.data.x, ypos: id, color: action.data.color });\r\n        });\r\n      });\r\n      return {\r\n        ...state,\r\n        arts: arts1,\r\n      };\r\n    case \"DEL_COL\":\r\n      const arts2 = JSON.parse(JSON.stringify(state.arts)) as Art[];\r\n      if (arts2[0].rows[0].length === 1) return { ...state, arts: state.arts };\r\n      arts2.forEach((art) => {\r\n        art.rows.forEach((row) => {\r\n          row.pop();\r\n        });\r\n      });\r\n      return {\r\n        ...state,\r\n        arts: arts2,\r\n      };\r\n    case \"SET_CHOSEN\":\r\n      return {\r\n        ...state,\r\n        chosen: action.data,\r\n      };\r\n    case \"SET_PIX\":\r\n      let arts3 = JSON.parse(JSON.stringify(state.arts)) as Art[];\r\n      const a = arts3.find((art) => art.id === action.artId)!;\r\n      arts3[arts3.indexOf(a)].rows[action.y!][action.x!].color = action.data;\r\n      return {\r\n        ...state,\r\n        arts: arts3,\r\n      };\r\n    case \"UPD_ART\":\r\n      const updatedArts = JSON.parse(JSON.stringify(state.arts)) as Art[];\r\n      let art = updatedArts.find((art) => art.id === action.artId)!;\r\n      updatedArts[updatedArts.indexOf(art)] = action.data;\r\n      return {\r\n        arts: updatedArts,\r\n        chosen: state.chosen,\r\n      };\r\n    default:\r\n      throw new Error(\"Uncaught type: \" + action.type);\r\n  }\r\n};\r\n\r\nconst ArtsContextProvider = (props: any) => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n  return (\r\n    <ArtsContext.Provider value={{ arts: state, artsDispatch: dispatch }}>\r\n      {props.children}\r\n    </ArtsContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ArtsContextProvider;\r\n"]},"metadata":{},"sourceType":"module"}