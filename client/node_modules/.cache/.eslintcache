[{"C:\\Users\\Pechenka\\pixel-app-ts\\src\\index.tsx":"1","C:\\Users\\Pechenka\\pixel-app-ts\\src\\App.tsx":"2","C:\\Users\\Pechenka\\pixel-app-ts\\src\\context\\settings-context.tsx":"3","C:\\Users\\Pechenka\\pixel-app-ts\\src\\components\\Board\\Board.tsx":"4","C:\\Users\\Pechenka\\pixel-app-ts\\src\\components\\Board\\Pixel\\Pixel.tsx":"5","C:\\Users\\Pechenka\\pixel-app-ts\\src\\components\\Main\\Main.tsx":"6","C:\\Users\\Pechenka\\pixel-app-ts\\src\\components\\ToolsBar\\ToolsBar.tsx":"7","C:\\Users\\Pechenka\\pixel-app-ts\\src\\components\\ToolsBar\\Brush\\Brush.tsx":"8","C:\\Users\\Pechenka\\pixel-app-ts\\src\\components\\SettingsBar\\SettingsBar.tsx":"9","C:\\Users\\Pechenka\\pixel-app-ts\\src\\components\\SettingsBar\\SizeToggle\\SizeToggle.tsx":"10","C:\\Users\\Pechenka\\pixel-app-ts\\src\\context\\arts-context.tsx":"11","C:\\Users\\Pechenka\\pixel-app-ts\\src\\components\\ColorsPanel\\ColorsPanel.tsx":"12","C:\\Users\\Pechenka\\pixel-app-ts\\src\\components\\ColorsPanel\\ColorPick\\ColorPick.tsx":"13","C:\\Users\\Pechenka\\pixel-app-ts\\src\\components\\SettingsBar\\Reset\\Reset.tsx":"14","C:\\Users\\Pechenka\\pixel-app-ts\\src\\components\\Arts\\Arts.tsx":"15","C:\\Users\\Pechenka\\pixel-app-ts\\src\\components\\Arts\\Art\\Art.tsx":"16","C:\\Users\\Pechenka\\pixel-app-ts\\src\\hoc\\createArt.ts":"17","C:\\Users\\Pechenka\\pixel-app-ts\\src\\components\\SettingsBar\\PreviewAnimation\\PreviewAnimation.tsx":"18","C:\\Users\\Pechenka\\pixel-app-ts\\src\\components\\SimplePixel\\SimplePixel.tsx":"19","C:\\Users\\Pechenka\\pixel-app-ts\\src\\components\\ToolsBar\\SaveImage\\SaveImage.tsx":"20"},{"size":466,"mtime":1646056764369,"results":"21","hashOfConfig":"22"},{"size":103,"mtime":1646057051780,"results":"23","hashOfConfig":"22"},{"size":1945,"mtime":1645034327496,"results":"24","hashOfConfig":"22"},{"size":6507,"mtime":1645957758793,"results":"25","hashOfConfig":"22"},{"size":772,"mtime":1645695736206,"results":"26","hashOfConfig":"22"},{"size":658,"mtime":1645694601305,"results":"27","hashOfConfig":"22"},{"size":1878,"mtime":1646054576863,"results":"28","hashOfConfig":"22"},{"size":231,"mtime":1645009542404,"results":"29","hashOfConfig":"22"},{"size":2124,"mtime":1645785270071,"results":"30","hashOfConfig":"22"},{"size":763,"mtime":1645271651405,"results":"31","hashOfConfig":"22"},{"size":4426,"mtime":1645956148755,"results":"32","hashOfConfig":"22"},{"size":789,"mtime":1645810674934,"results":"33","hashOfConfig":"22"},{"size":413,"mtime":1644852758443,"results":"34","hashOfConfig":"22"},{"size":339,"mtime":1645272013852,"results":"35","hashOfConfig":"22"},{"size":1812,"mtime":1645777500346,"results":"36","hashOfConfig":"22"},{"size":2166,"mtime":1645810456077,"results":"37","hashOfConfig":"22"},{"size":449,"mtime":1645701058425,"results":"38","hashOfConfig":"22"},{"size":2916,"mtime":1645810182683,"results":"39","hashOfConfig":"22"},{"size":356,"mtime":1645779365493,"results":"40","hashOfConfig":"22"},{"size":2307,"mtime":1646415272361,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},"p22c0b",{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"45"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"45"},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105"},"C:\\Users\\Pechenka\\pixel-app-ts\\src\\index.tsx",[],[],["106","107"],"C:\\Users\\Pechenka\\pixel-app-ts\\src\\App.tsx",[],[],"C:\\Users\\Pechenka\\pixel-app-ts\\src\\context\\settings-context.tsx",[],[],"C:\\Users\\Pechenka\\pixel-app-ts\\src\\components\\Board\\Board.tsx",[],[],"C:\\Users\\Pechenka\\pixel-app-ts\\src\\components\\Board\\Pixel\\Pixel.tsx",[],[],"C:\\Users\\Pechenka\\pixel-app-ts\\src\\components\\Main\\Main.tsx",[],[],"C:\\Users\\Pechenka\\pixel-app-ts\\src\\components\\ToolsBar\\ToolsBar.tsx",[],[],"C:\\Users\\Pechenka\\pixel-app-ts\\src\\components\\ToolsBar\\Brush\\Brush.tsx",[],[],"C:\\Users\\Pechenka\\pixel-app-ts\\src\\components\\SettingsBar\\SettingsBar.tsx",["108","109"],[],"import { MouseEventHandler, useContext, useState } from \"react\";\r\nimport { SettingsContext } from \"../../context/settings-context\";\r\nimport { ArtsContext } from \"../../context/arts-context\";\r\n\r\nimport SizeToggle from \"./SizeToggle/SizeToggle\";\r\nimport Reset from \"./Reset/Reset\";\r\nimport PreviewAnimation from \"./PreviewAnimation/PreviewAnimation\";\r\nimport createArt from \"../../hoc/createArt\";\r\n\r\nconst SettingsBar = () => {\r\n  const [duration, setDuration] = useState(1);\r\n  const { settings, settingsDispatch } = useContext(SettingsContext);\r\n  const { arts, artsDispatch } = useContext(ArtsContext)!;\r\n\r\n  const onAddRow: MouseEventHandler = (e) => {\r\n    settingsDispatch!({ type: \"ADD_ROW\" });\r\n    const row = [];\r\n    for (let i = 0; i < settings!.columnSize; i++) {\r\n      row.push({\r\n        xpos: i,\r\n        ypos: settings!.rowSize,\r\n        color: settings!.defColor,\r\n      });\r\n    }\r\n    artsDispatch({ type: \"ADD_ROW\", data: row });\r\n  };\r\n\r\n  const onDelRow: MouseEventHandler = (e) => {\r\n    settingsDispatch!({ type: \"DEL_ROW\" });\r\n    artsDispatch({ type: \"DEL_ROW\" });\r\n  };\r\n\r\n  const onAddCol: MouseEventHandler = (e) => {\r\n    settingsDispatch!({ type: \"ADD_COL\" });\r\n    artsDispatch({\r\n      type: \"ADD_COL\",\r\n      data: { x: settings!.columnSize, color: settings!.defColor },\r\n    });\r\n  };\r\n\r\n  const onDelCol: MouseEventHandler = (e) => {\r\n    settingsDispatch!({ type: \"DEL_COL\" });\r\n    artsDispatch({ type: \"DEL_COL\" });\r\n  };\r\n\r\n  const resetHandler: MouseEventHandler = (e) => {\r\n    const artRows = createArt(settings!);\r\n    artsDispatch({\r\n      type: \"UPD_ART\",\r\n      artId: arts.chosen!,\r\n      data: { rows: artRows, id: arts!.chosen },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <PreviewAnimation duration={0} />\r\n      <SizeToggle\r\n        cur={settings!.rowSize}\r\n        img=\"&#8597;\"\r\n        add={onAddRow}\r\n        del={onDelRow}\r\n      />\r\n      <SizeToggle\r\n        cur={settings!.columnSize}\r\n        img=\"&#8596;\"\r\n        add={onAddCol}\r\n        del={onDelCol}\r\n      />\r\n      <Reset clicked={resetHandler} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SettingsBar;\r\n","C:\\Users\\Pechenka\\pixel-app-ts\\src\\components\\SettingsBar\\SizeToggle\\SizeToggle.tsx",[],[],"C:\\Users\\Pechenka\\pixel-app-ts\\src\\context\\arts-context.tsx",[],[],"C:\\Users\\Pechenka\\pixel-app-ts\\src\\components\\ColorsPanel\\ColorsPanel.tsx",[],[],"C:\\Users\\Pechenka\\pixel-app-ts\\src\\components\\ColorsPanel\\ColorPick\\ColorPick.tsx",[],[],"C:\\Users\\Pechenka\\pixel-app-ts\\src\\components\\SettingsBar\\Reset\\Reset.tsx",[],[],"C:\\Users\\Pechenka\\pixel-app-ts\\src\\components\\Arts\\Arts.tsx",[],[],"C:\\Users\\Pechenka\\pixel-app-ts\\src\\components\\Arts\\Art\\Art.tsx",[],[],"C:\\Users\\Pechenka\\pixel-app-ts\\src\\hoc\\createArt.ts",[],[],"C:\\Users\\Pechenka\\pixel-app-ts\\src\\components\\SettingsBar\\PreviewAnimation\\PreviewAnimation.tsx",["110","111"],[],"import { useCallback, useContext, useEffect, useState, useRef } from \"react\";\r\n\r\nimport classes from \"./PreviewAnimation.module.css\";\r\nimport SimplePixel from \"../../SimplePixel/SimplePixel\";\r\n\r\nimport { Art, ArtsContext } from \"../../../context/arts-context\";\r\n\r\ninterface PreviewAnimationProps {\r\n  duration: number;\r\n}\r\n\r\nconst PreviewAnimation = (props: PreviewAnimationProps) => {\r\n  const [duration, setDuration] = useState(1);\r\n  const [play, setPlay] = useState(false);\r\n  const { arts } = useContext(ArtsContext)!;\r\n  const [artToShow, setArtToShow] = useState<null | Art>(null);\r\n  let timer = useRef<null | NodeJS.Timer>(null);\r\n\r\n  const updateArtToShow = useCallback(() => {\r\n    setArtToShow((prevArt) => {\r\n      let index = prevArt!.id + 1;\r\n      if (index === arts.arts.length) {\r\n        index = 0;\r\n      }\r\n      const art = arts.arts.find((art) => art.id === index)!;\r\n      return art;\r\n    });\r\n  }, [arts.arts]);\r\n\r\n  useEffect(() => {\r\n    if (!play) {\r\n      const art = arts.arts.find((art) => art.id === arts.chosen)!;\r\n      setArtToShow(art);\r\n    }\r\n  }, [arts, play]);\r\n\r\n  useEffect(() => {\r\n    if (play) {\r\n      if (timer.current === null) {\r\n        setArtToShow(arts.arts[0]);\r\n        timer.current = setInterval(updateArtToShow, duration * 1000);\r\n      }\r\n    } else if (timer.current !== null) {\r\n      clearInterval(timer.current);\r\n      timer.current = null;\r\n    }\r\n  }, [play, duration, updateArtToShow, artToShow]);\r\n\r\n  const onTogglePlayHandler = () => {\r\n    setPlay(!play);\r\n  };\r\n\r\n  const ps = 6;\r\n\r\n  return (\r\n    <div className={classes.PreviewAnimation}>\r\n      <button className={classes.PlayButton} onClick={onTogglePlayHandler}>\r\n        <svg\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          className=\"h-6 w-6\"\r\n          fill=\"none\"\r\n          viewBox=\"0 0 24 24\"\r\n          stroke=\"currentColor\"\r\n        >\r\n          <path\r\n            strokeLinecap=\"round\"\r\n            strokeLinejoin=\"round\"\r\n            strokeWidth=\"2\"\r\n            d=\"M14.752 11.168l-3.197-2.132A1 1 0 0010 9.87v4.263a1 1 0 001.555.832l3.197-2.132a1 1 0 000-1.664z\"\r\n          />\r\n          <path\r\n            strokeLinecap=\"round\"\r\n            strokeLinejoin=\"round\"\r\n            strokeWidth=\"2\"\r\n            d=\"M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\r\n          />\r\n        </svg>\r\n      </button>\r\n      <div className={classes.PreviewAnimationSpace}>\r\n        <div>\r\n          {artToShow &&\r\n            artToShow.rows.map((row) => (\r\n              <div className={classes.Row} key={artToShow.rows.indexOf(row)}>\r\n                {row.map((pix) => (\r\n                  <SimplePixel\r\n                    key={pix.ypos.toString() + pix.xpos}\r\n                    ps={ps}\r\n                    pix={pix}\r\n                  />\r\n                ))}\r\n              </div>\r\n            ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PreviewAnimation;\r\n","C:\\Users\\Pechenka\\pixel-app-ts\\src\\components\\SimplePixel\\SimplePixel.tsx",[],[],"C:\\Users\\Pechenka\\pixel-app-ts\\src\\components\\ToolsBar\\SaveImage\\SaveImage.tsx",["112","113","114","115"],[],"import {\r\n  FormEventHandler,\r\n  MutableRefObject,\r\n  useContext,\r\n  useEffect,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\n\r\nimport classes from \"./SaveImage.module.css\";\r\nimport { Art, ArtsContext } from \"../../../context/arts-context\";\r\nimport { SettingsContext } from \"../../../context/settings-context\";\r\nimport { createCanvas } from \"canvas\";\r\n\r\nconst SaveImage = () => {\r\n  const { settings } = useContext(SettingsContext);\r\n  const { arts } = useContext(ArtsContext)!;\r\n  const socket = useRef<null | WebSocket>(null);\r\n  const [imgId, setImgId] = useState<null | string>(null);\r\n\r\n  useEffect(() => {\r\n    const s = new WebSocket(\"ws://localhost:3001\");\r\n    s.onopen = (e) => {\r\n      console.log(\"connection\");\r\n    };\r\n    s.onmessage = function (e) {\r\n      const id = JSON.parse(e.data).id;\r\n      setImgId(id);\r\n      fetch(\"/get-img/\" + id, {\r\n        method: \"GET\",\r\n      })\r\n        .then((res) => {\r\n          return res.blob();\r\n        })\r\n        .then((data) => {\r\n          const blob = new Blob([data]);\r\n          const link = document.createElement(\"a\");\r\n          link.href = window.URL.createObjectURL(blob);\r\n          link.download = \"download.png\";\r\n          link.click();\r\n        })\r\n        .catch((err) => {\r\n          console.log(err.message);\r\n        });\r\n    };\r\n    socket.current = s;\r\n    return () => {\r\n      if (imgId) {\r\n        s.send(JSON.stringify({ type: \"DELETE_IMG\", id: imgId }));\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  const onSaveImage: FormEventHandler = (e) => {\r\n    e.preventDefault();\r\n    const art = arts.arts.find((art) => art.id === arts.chosen)!;\r\n    socket.current!.send(\r\n      JSON.stringify({\r\n        type: \"CREATE_IMG\",\r\n        img: art,\r\n        cs: settings!.columnSize,\r\n        rs: settings!.rowSize,\r\n        dc: settings!.defColor,\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={onSaveImage}>\r\n      <button type=\"submit\" className={classes.SaveImage}>\r\n        SAVE\r\n      </button>\r\n      {/* <input type=\"hidden\" name=\"img\" value={JSON.stringify(img)} />\r\n      <input type=\"hidden\" name=\"cs\" value={settings!.columnSize} />\r\n      <input type=\"hidden\" name=\"rs\" value={settings!.rowSize} />\r\n      <input type=\"hidden\" name=\"dc\" value={settings!.defColor} /> */}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default SaveImage;\r\n",{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","severity":1,"message":"121","line":11,"column":10,"nodeType":"122","messageId":"123","endLine":11,"endColumn":18},{"ruleId":"120","severity":1,"message":"124","line":11,"column":20,"nodeType":"122","messageId":"123","endLine":11,"endColumn":31},{"ruleId":"120","severity":1,"message":"124","line":13,"column":20,"nodeType":"122","messageId":"123","endLine":13,"endColumn":31},{"ruleId":"125","severity":1,"message":"126","line":47,"column":6,"nodeType":"127","endLine":47,"endColumn":50,"suggestions":"128"},{"ruleId":"120","severity":1,"message":"129","line":3,"column":3,"nodeType":"122","messageId":"123","endLine":3,"endColumn":19},{"ruleId":"120","severity":1,"message":"130","line":11,"column":10,"nodeType":"122","messageId":"123","endLine":11,"endColumn":13},{"ruleId":"120","severity":1,"message":"131","line":13,"column":10,"nodeType":"122","messageId":"123","endLine":13,"endColumn":22},{"ruleId":"125","severity":1,"message":"132","line":52,"column":6,"nodeType":"127","endLine":52,"endColumn":8,"suggestions":"133"},"no-native-reassign",["134"],"no-negated-in-lhs",["135"],"@typescript-eslint/no-unused-vars","'duration' is assigned a value but never used.","Identifier","unusedVar","'setDuration' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'arts.arts'. Either include it or remove the dependency array.","ArrayExpression",["136"],"'MutableRefObject' is defined but never used.","'Art' is defined but never used.","'createCanvas' is defined but never used.","React Hook useEffect has a missing dependency: 'imgId'. Either include it or remove the dependency array.",["137"],"no-global-assign","no-unsafe-negation",{"desc":"138","fix":"139"},{"desc":"140","fix":"141"},"Update the dependencies array to be: [play, duration, updateArtToShow, artToShow, arts.arts]",{"range":"142","text":"143"},"Update the dependencies array to be: [imgId]",{"range":"144","text":"145"},[1418,1462],"[play, duration, updateArtToShow, artToShow, arts.arts]",[1459,1461],"[imgId]"]