[{"C:\\Users\\Pechenka\\pixel-app-ts\\client\\src\\index.tsx":"1","C:\\Users\\Pechenka\\pixel-app-ts\\client\\src\\App.tsx":"2","C:\\Users\\Pechenka\\pixel-app-ts\\client\\src\\context\\settings-context.tsx":"3","C:\\Users\\Pechenka\\pixel-app-ts\\client\\src\\context\\arts-context.tsx":"4","C:\\Users\\Pechenka\\pixel-app-ts\\client\\src\\components\\Main\\Main.tsx":"5","C:\\Users\\Pechenka\\pixel-app-ts\\client\\src\\components\\SettingsBar\\SettingsBar.tsx":"6","C:\\Users\\Pechenka\\pixel-app-ts\\client\\src\\components\\Arts\\Arts.tsx":"7","C:\\Users\\Pechenka\\pixel-app-ts\\client\\src\\components\\Board\\Board.tsx":"8","C:\\Users\\Pechenka\\pixel-app-ts\\client\\src\\components\\ColorsPanel\\ColorsPanel.tsx":"9","C:\\Users\\Pechenka\\pixel-app-ts\\client\\src\\components\\ToolsBar\\ToolsBar.tsx":"10","C:\\Users\\Pechenka\\pixel-app-ts\\client\\src\\hoc\\createArt.ts":"11","C:\\Users\\Pechenka\\pixel-app-ts\\client\\src\\components\\Arts\\Art\\Art.tsx":"12","C:\\Users\\Pechenka\\pixel-app-ts\\client\\src\\components\\SettingsBar\\SizeToggle\\SizeToggle.tsx":"13","C:\\Users\\Pechenka\\pixel-app-ts\\client\\src\\components\\SettingsBar\\Reset\\Reset.tsx":"14","C:\\Users\\Pechenka\\pixel-app-ts\\client\\src\\components\\SettingsBar\\PreviewAnimation\\PreviewAnimation.tsx":"15","C:\\Users\\Pechenka\\pixel-app-ts\\client\\src\\components\\ColorsPanel\\ColorPick\\ColorPick.tsx":"16","C:\\Users\\Pechenka\\pixel-app-ts\\client\\src\\components\\Board\\Pixel\\Pixel.tsx":"17","C:\\Users\\Pechenka\\pixel-app-ts\\client\\src\\components\\ToolsBar\\SaveImage\\SaveImage.tsx":"18","C:\\Users\\Pechenka\\pixel-app-ts\\client\\src\\components\\ToolsBar\\Brush\\Brush.tsx":"19","C:\\Users\\Pechenka\\pixel-app-ts\\client\\src\\components\\SimplePixel\\SimplePixel.tsx":"20"},{"size":466,"mtime":1646056764369,"results":"21","hashOfConfig":"22"},{"size":103,"mtime":1646057051780,"results":"23","hashOfConfig":"22"},{"size":1945,"mtime":1645034327496,"results":"24","hashOfConfig":"22"},{"size":4426,"mtime":1645956148755,"results":"25","hashOfConfig":"22"},{"size":658,"mtime":1645694601305,"results":"26","hashOfConfig":"22"},{"size":2124,"mtime":1645785270071,"results":"27","hashOfConfig":"22"},{"size":1812,"mtime":1645777500346,"results":"28","hashOfConfig":"22"},{"size":6507,"mtime":1645957758793,"results":"29","hashOfConfig":"22"},{"size":789,"mtime":1645810674934,"results":"30","hashOfConfig":"22"},{"size":1878,"mtime":1646054576863,"results":"31","hashOfConfig":"22"},{"size":449,"mtime":1645701058425,"results":"32","hashOfConfig":"22"},{"size":2166,"mtime":1645810456077,"results":"33","hashOfConfig":"22"},{"size":763,"mtime":1645271651405,"results":"34","hashOfConfig":"22"},{"size":339,"mtime":1645272013852,"results":"35","hashOfConfig":"22"},{"size":2916,"mtime":1645810182683,"results":"36","hashOfConfig":"22"},{"size":413,"mtime":1644852758443,"results":"37","hashOfConfig":"22"},{"size":772,"mtime":1645695736206,"results":"38","hashOfConfig":"22"},{"size":2321,"mtime":1646585365730,"results":"39","hashOfConfig":"22"},{"size":231,"mtime":1645009542404,"results":"40","hashOfConfig":"22"},{"size":356,"mtime":1645779365493,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ji1qiy",{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88"},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Pechenka\\pixel-app-ts\\client\\src\\index.tsx",[],[],"C:\\Users\\Pechenka\\pixel-app-ts\\client\\src\\App.tsx",[],[],"C:\\Users\\Pechenka\\pixel-app-ts\\client\\src\\context\\settings-context.tsx",[],[],"C:\\Users\\Pechenka\\pixel-app-ts\\client\\src\\context\\arts-context.tsx",[],[],"C:\\Users\\Pechenka\\pixel-app-ts\\client\\src\\components\\Main\\Main.tsx",[],[],"C:\\Users\\Pechenka\\pixel-app-ts\\client\\src\\components\\SettingsBar\\SettingsBar.tsx",["104","105"],[],"import { MouseEventHandler, useContext, useState } from \"react\";\r\nimport { SettingsContext } from \"../../context/settings-context\";\r\nimport { ArtsContext } from \"../../context/arts-context\";\r\n\r\nimport SizeToggle from \"./SizeToggle/SizeToggle\";\r\nimport Reset from \"./Reset/Reset\";\r\nimport PreviewAnimation from \"./PreviewAnimation/PreviewAnimation\";\r\nimport createArt from \"../../hoc/createArt\";\r\n\r\nconst SettingsBar = () => {\r\n  const [duration, setDuration] = useState(1);\r\n  const { settings, settingsDispatch } = useContext(SettingsContext);\r\n  const { arts, artsDispatch } = useContext(ArtsContext)!;\r\n\r\n  const onAddRow: MouseEventHandler = (e) => {\r\n    settingsDispatch!({ type: \"ADD_ROW\" });\r\n    const row = [];\r\n    for (let i = 0; i < settings!.columnSize; i++) {\r\n      row.push({\r\n        xpos: i,\r\n        ypos: settings!.rowSize,\r\n        color: settings!.defColor,\r\n      });\r\n    }\r\n    artsDispatch({ type: \"ADD_ROW\", data: row });\r\n  };\r\n\r\n  const onDelRow: MouseEventHandler = (e) => {\r\n    settingsDispatch!({ type: \"DEL_ROW\" });\r\n    artsDispatch({ type: \"DEL_ROW\" });\r\n  };\r\n\r\n  const onAddCol: MouseEventHandler = (e) => {\r\n    settingsDispatch!({ type: \"ADD_COL\" });\r\n    artsDispatch({\r\n      type: \"ADD_COL\",\r\n      data: { x: settings!.columnSize, color: settings!.defColor },\r\n    });\r\n  };\r\n\r\n  const onDelCol: MouseEventHandler = (e) => {\r\n    settingsDispatch!({ type: \"DEL_COL\" });\r\n    artsDispatch({ type: \"DEL_COL\" });\r\n  };\r\n\r\n  const resetHandler: MouseEventHandler = (e) => {\r\n    const artRows = createArt(settings!);\r\n    artsDispatch({\r\n      type: \"UPD_ART\",\r\n      artId: arts.chosen!,\r\n      data: { rows: artRows, id: arts!.chosen },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <PreviewAnimation duration={0} />\r\n      <SizeToggle\r\n        cur={settings!.rowSize}\r\n        img=\"&#8597;\"\r\n        add={onAddRow}\r\n        del={onDelRow}\r\n      />\r\n      <SizeToggle\r\n        cur={settings!.columnSize}\r\n        img=\"&#8596;\"\r\n        add={onAddCol}\r\n        del={onDelCol}\r\n      />\r\n      <Reset clicked={resetHandler} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SettingsBar;\r\n","C:\\Users\\Pechenka\\pixel-app-ts\\client\\src\\components\\Arts\\Arts.tsx",[],[],"C:\\Users\\Pechenka\\pixel-app-ts\\client\\src\\components\\Board\\Board.tsx",[],[],"C:\\Users\\Pechenka\\pixel-app-ts\\client\\src\\components\\ColorsPanel\\ColorsPanel.tsx",[],[],"C:\\Users\\Pechenka\\pixel-app-ts\\client\\src\\components\\ToolsBar\\ToolsBar.tsx",[],[],"C:\\Users\\Pechenka\\pixel-app-ts\\client\\src\\hoc\\createArt.ts",[],[],"C:\\Users\\Pechenka\\pixel-app-ts\\client\\src\\components\\Arts\\Art\\Art.tsx",[],[],"C:\\Users\\Pechenka\\pixel-app-ts\\client\\src\\components\\SettingsBar\\SizeToggle\\SizeToggle.tsx",[],[],"C:\\Users\\Pechenka\\pixel-app-ts\\client\\src\\components\\SettingsBar\\Reset\\Reset.tsx",[],[],"C:\\Users\\Pechenka\\pixel-app-ts\\client\\src\\components\\SettingsBar\\PreviewAnimation\\PreviewAnimation.tsx",["106","107"],[],"import { useCallback, useContext, useEffect, useState, useRef } from \"react\";\r\n\r\nimport classes from \"./PreviewAnimation.module.css\";\r\nimport SimplePixel from \"../../SimplePixel/SimplePixel\";\r\n\r\nimport { Art, ArtsContext } from \"../../../context/arts-context\";\r\n\r\ninterface PreviewAnimationProps {\r\n  duration: number;\r\n}\r\n\r\nconst PreviewAnimation = (props: PreviewAnimationProps) => {\r\n  const [duration, setDuration] = useState(1);\r\n  const [play, setPlay] = useState(false);\r\n  const { arts } = useContext(ArtsContext)!;\r\n  const [artToShow, setArtToShow] = useState<null | Art>(null);\r\n  let timer = useRef<null | NodeJS.Timer>(null);\r\n\r\n  const updateArtToShow = useCallback(() => {\r\n    setArtToShow((prevArt) => {\r\n      let index = prevArt!.id + 1;\r\n      if (index === arts.arts.length) {\r\n        index = 0;\r\n      }\r\n      const art = arts.arts.find((art) => art.id === index)!;\r\n      return art;\r\n    });\r\n  }, [arts.arts]);\r\n\r\n  useEffect(() => {\r\n    if (!play) {\r\n      const art = arts.arts.find((art) => art.id === arts.chosen)!;\r\n      setArtToShow(art);\r\n    }\r\n  }, [arts, play]);\r\n\r\n  useEffect(() => {\r\n    if (play) {\r\n      if (timer.current === null) {\r\n        setArtToShow(arts.arts[0]);\r\n        timer.current = setInterval(updateArtToShow, duration * 1000);\r\n      }\r\n    } else if (timer.current !== null) {\r\n      clearInterval(timer.current);\r\n      timer.current = null;\r\n    }\r\n  }, [play, duration, updateArtToShow, artToShow]);\r\n\r\n  const onTogglePlayHandler = () => {\r\n    setPlay(!play);\r\n  };\r\n\r\n  const ps = 6;\r\n\r\n  return (\r\n    <div className={classes.PreviewAnimation}>\r\n      <button className={classes.PlayButton} onClick={onTogglePlayHandler}>\r\n        <svg\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          className=\"h-6 w-6\"\r\n          fill=\"none\"\r\n          viewBox=\"0 0 24 24\"\r\n          stroke=\"currentColor\"\r\n        >\r\n          <path\r\n            strokeLinecap=\"round\"\r\n            strokeLinejoin=\"round\"\r\n            strokeWidth=\"2\"\r\n            d=\"M14.752 11.168l-3.197-2.132A1 1 0 0010 9.87v4.263a1 1 0 001.555.832l3.197-2.132a1 1 0 000-1.664z\"\r\n          />\r\n          <path\r\n            strokeLinecap=\"round\"\r\n            strokeLinejoin=\"round\"\r\n            strokeWidth=\"2\"\r\n            d=\"M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\r\n          />\r\n        </svg>\r\n      </button>\r\n      <div className={classes.PreviewAnimationSpace}>\r\n        <div>\r\n          {artToShow &&\r\n            artToShow.rows.map((row) => (\r\n              <div className={classes.Row} key={artToShow.rows.indexOf(row)}>\r\n                {row.map((pix) => (\r\n                  <SimplePixel\r\n                    key={pix.ypos.toString() + pix.xpos}\r\n                    ps={ps}\r\n                    pix={pix}\r\n                  />\r\n                ))}\r\n              </div>\r\n            ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PreviewAnimation;\r\n","C:\\Users\\Pechenka\\pixel-app-ts\\client\\src\\components\\ColorsPanel\\ColorPick\\ColorPick.tsx",[],[],"C:\\Users\\Pechenka\\pixel-app-ts\\client\\src\\components\\Board\\Pixel\\Pixel.tsx",[],[],"C:\\Users\\Pechenka\\pixel-app-ts\\client\\src\\components\\ToolsBar\\SaveImage\\SaveImage.tsx",["108","109","110","111"],[],"C:\\Users\\Pechenka\\pixel-app-ts\\client\\src\\components\\ToolsBar\\Brush\\Brush.tsx",[],[],"C:\\Users\\Pechenka\\pixel-app-ts\\client\\src\\components\\SimplePixel\\SimplePixel.tsx",[],[],{"ruleId":"112","severity":1,"message":"113","line":11,"column":10,"nodeType":"114","messageId":"115","endLine":11,"endColumn":18},{"ruleId":"112","severity":1,"message":"116","line":11,"column":20,"nodeType":"114","messageId":"115","endLine":11,"endColumn":31},{"ruleId":"112","severity":1,"message":"116","line":13,"column":20,"nodeType":"114","messageId":"115","endLine":13,"endColumn":31},{"ruleId":"117","severity":1,"message":"118","line":47,"column":6,"nodeType":"119","endLine":47,"endColumn":50,"suggestions":"120"},{"ruleId":"112","severity":1,"message":"121","line":3,"column":3,"nodeType":"114","messageId":"115","endLine":3,"endColumn":19},{"ruleId":"112","severity":1,"message":"122","line":11,"column":10,"nodeType":"114","messageId":"115","endLine":11,"endColumn":13},{"ruleId":"112","severity":1,"message":"123","line":13,"column":10,"nodeType":"114","messageId":"115","endLine":13,"endColumn":22},{"ruleId":"117","severity":1,"message":"124","line":52,"column":6,"nodeType":"119","endLine":52,"endColumn":8,"suggestions":"125"},"@typescript-eslint/no-unused-vars","'duration' is assigned a value but never used.","Identifier","unusedVar","'setDuration' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'arts.arts'. Either include it or remove the dependency array.","ArrayExpression",["126"],"'MutableRefObject' is defined but never used.","'Art' is defined but never used.","'createCanvas' is defined but never used.","React Hook useEffect has a missing dependency: 'imgId'. Either include it or remove the dependency array.",["127"],{"desc":"128","fix":"129"},{"desc":"130","fix":"131"},"Update the dependencies array to be: [play, duration, updateArtToShow, artToShow, arts.arts]",{"range":"132","text":"133"},"Update the dependencies array to be: [imgId]",{"range":"134","text":"135"},[1418,1462],"[play, duration, updateArtToShow, artToShow, arts.arts]",[1473,1475],"[imgId]"]